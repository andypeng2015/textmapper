// generated by Textmapper; DO NOT EDIT

package tm

import (
	"fmt"

	"github.com/inspirer/textmapper/parsers/tm/token"
)

var recoveryScopeStates = map[int]bool{
	108: true,
	186: true,
	218: true,
	219: true,
	270: true,
	469: true,
}

var tmNonterminals = [...]string{
	"identifier",
	"identifier_Keywords",
	"identifier_Str",
	"integer_literal",
	"string_literal",
	"boolean_literal",
	"literal",
	"pattern",
	"command",
	"syntax_problem",
	"file",
	"import__optlist",
	"option_optlist",
	"header",
	"lexer_section",
	"parser_section",
	"import_",
	"option",
	"symref",
	"symref_Args",
	"rawType",
	"lexer_parts",
	"lexer_part",
	"lexer_part_OrSyntaxError",
	"named_pattern",
	"start_conditions_scope",
	"start_conditions",
	"stateref_list_Comma_separated",
	"lexeme",
	"lexeme_id",
	"lexeme_attrs",
	"lexeme_attribute",
	"lexer_directive",
	"lexer_state_list_Comma_separated",
	"stateref",
	"lexer_state",
	"grammar_parts",
	"grammar_part",
	"grammar_part_OrSyntaxError",
	"nonterm",
	"nonterm_alias",
	"assoc",
	"param_modifier",
	"template_param",
	"directive",
	"identifier_list_Comma_separated",
	"inputref_list_Comma_separated",
	"inputref",
	"references",
	"rules",
	"rule0",
	"predicate",
	"reportClause",
	"reportAs",
	"rhsParts",
	"rhsPart",
	"rhsPart_OrSyntaxError",
	"lookahead_predicate_list_And_separated",
	"rhsLookahead",
	"lookahead_predicate",
	"rhsStateMarker",
	"rhsAssignment",
	"rhsOptional",
	"rhsCast",
	"rhsAlias",
	"listSeparator",
	"rhsPrimary",
	"rhsSet",
	"setPrimary",
	"setExpression",
	"nonterm_param_list_Comma_separated",
	"nonterm_params",
	"nonterm_param",
	"param_ref",
	"args",
	"argument_list_Comma_separated",
	"argument_list_Comma_separatedopt",
	"argument",
	"param_type",
	"param_value",
	"predicate_primary",
	"predicate_expression",
	"expression",
	"expression_list_Comma_separated",
	"rawTypeopt",
}

func symbolName(sym int32) string {
	if sym == noToken {
		return "<no-token>"
	}
	if sym < int32(token.NumTokens) {
		return token.Type(sym).String()
	}
	if i := int(sym) - int(token.NumTokens); i < len(tmNonterminals) {
		return tmNonterminals[i]
	}
	return fmt.Sprintf("nonterminal(%d)", sym)
}

var tmDefGoto = []int32{
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1,
}

var tmGoto = []int32{
	1006, 81, -83, -162, 922, -141, -61, -204, -16, 4809, 792, 790, 717, 794,
	374, 72, 718, 702, 6, 1102, 43, 214, 232, 151, -122, -102, 25, 423, 26, 224,
	-371, 241, 31, 173, 248, -42, 64, 111, 245, 15, 279, 416, 417, -114, -94,
	-240, 326, 134, 390, 8337, 8049, 8085, 275, 424, 7877, 7913, -137, 699, 7052,
	579, 7088, 7224, 5828, 5895, 6031, 595, 6162, 4985, -29, 9, 723, 678, 465,
	1161, 536, 589, 627, 499, 296, -342, 13, 100, 67, 456, -281,
}

var tmDefAct = []int32{
	-1, -1, -1, 126, 0, 10, 1, 23, 11, 21, 22, 14, -1, 17, 9, 13, 27, -1, 5, 24,
	30, 29, 28, 6, 31, 15, 18, 8, 12, 16, 32, 3, 7, 19, 4, 25, 20, -1, 33, 69,
	67, 70, 68, 71, 66, 43, 34, 56, 44, 54, 55, 47, 59, 50, 42, 46, 60, 35, 38,
	57, 63, 62, 61, 39, 64, 48, 51, 41, 45, 49, 65, 36, 40, 52, 37, 58, 53, -1,
	-1, 26, 2, -1, -1, -1, -1, -1, -1, 140, -1, -1, -1, -1, 130, -1, -1, -1, 125,
	-1, -1, -1, -1, -1, -1, -1, 74, -1, -1, -1, -1, -1, -1, 116, 72, 73, -1, 84,
	75, 97, 85, 95, 96, 88, 100, 91, 83, 87, 101, 76, 79, 98, 104, 103, 102, 80,
	105, 89, 92, 82, 86, 90, 106, 77, 81, 93, 78, 99, 94, 115, 139, 292, 282,
	320, -1, 272, -1, 280, -1, 289, 294, 293, 291, 310, 313, 315, 317, 327, -1,
	-1, -1, -1, 337, 339, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 108, -1,
	-1, -1, -1, -1, -1, 123, 127, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	295, -1, 309, -1, 342, -1, 360, -1, -1, -1, -1, 137, 308, -1, 305, -1, -1,
	-1, -1, -1, 138, -1, 233, 276, -1, -1, 298, 303, 278, 290, 300, 299, 297,
	314, -1, -1, 325, 324, 246, -1, -1, 286, -1, -1, 338, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 135, -1, -1, -1, -1, 119, -1, 121,
	237, -1, -1, -1, 245, -1, -1, -1, -1, -1, -1, -1, 296, 357, -1, -1, -1, 283,
	-1, 321, -1, -1, 307, 306, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, 139, 330, 333, -1, 311, -1, -1, -1, -1, -1, 345,
	312, 273, 274, 301, -1, 316, -1, 265, -1, 288, -1, 336, 231, -1, 229, -1, -1,
	-1, 232, 225, -1, -1, -1, -1, -1, -1, -1, 129, 134, -1, -1, -1, -1, -1, 141,
	143, 146, -1, 144, 145, -1, -1, -1, 209, 211, 212, 213, 107, -1, 110, 109,
	112, 111, 113, 363, 368, 136, 117, 235, -1, 236, 243, -1, 244, 241, -1, -1,
	-1, 358, 359, -1, -1, 270, -1, -1, 304, 326, -1, 332, 329, -1, 328, -1, 350,
	351, -1, -1, 343, 302, 318, -1, 284, 354, 355, 340, 230, 227, -1, 228, 223,
	-1, 221, -1, -1, -1, 224, -1, -1, -1, -1, 207, -1, 157, -1, -1, 371, -1, -1,
	151, 142, 147, 150, 148, 149, -1, -1, -1, -1, -1, 352, -1, -1, -1, -1, 247,
	250, 249, 353, 248, -1, -1, -1, -1, 217, 210, 214, 215, 216, -1, 367, 370,
	-1, 234, 242, 239, -1, 240, 271, 323, 322, 331, -1, -1, 348, 344, 264, 226,
	222, 219, -1, 220, -1, 208, -1, 206, -1, 154, -1, 155, 114, 152, -1, -1, 197,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 267, -1, -1, -1, -1, -1, 366, -1,
	365, 238, 218, -1, 203, -1, 204, 156, 198, 187, -1, 195, 196, 153, -1, 177,
	-1, -1, 261, 262, -1, -1, 268, 256, -1, 257, 255, -1, -1, 254, -1, 364, 369,
	202, 205, 185, 186, 200, 201, -1, 191, 194, -1, 167, 175, 176, 258, 259, -1,
	263, 266, -1, 252, -1, -1, 181, 184, -1, 199, 190, -1, 192, 165, 166, 171,
	174, -1, 260, -1, 253, 180, -1, 182, 188, 161, 164, -1, 170, -1, 172, 251,
	178, 160, -1, 162, 168, 158, -1, -1, -1, -1,
}

const tmActionBase = -83

var tmAction = []int32{
	-23, 7803, 5226, -83, -83, -83, -83, -83, -83, -83, -83, -83, 5386, -83, -83,
	-83, -83, 5470, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83,
	-83, -83, -83, -83, -83, -83, -83, 256, -83, -83, -83, -83, -83, -83, -83,
	-83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83,
	-83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83,
	-83, -83, -14, 5631, -83, -83, 130, 51, 677, 5226, 7843, 7843, -83, 124, -13,
	58, 225, -83, 5226, 7488, 6398, -83, 677, 181, 90, 677, 323, 167, 132, -83,
	112, 7843, 7546, 764, 6484, 250, -83, -83, -83, 276, -83, -83, -83, -83, -83,
	-83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83,
	-83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, 8468, -83,
	-83, -83, 364, -83, 1087, -83, 844, -83, -83, -83, -83, -83, 6928, 7636,
	7924, -83, 284, 262, 6962, 84, -83, -83, 677, 290, 677, 420, 609, 677, 677,
	421, 382, 610, 605, -83, 628, 616, 185, 622, 362, 419, -83, -83, 430, 677,
	617, 677, 463, 677, 672, 677, 677, 462, 673, -83, 7002, -83, 7843, -83, 93,
	-83, 98, 33, 924, 7002, -83, -83, 357, -83, 764, 5710, 5550, 5888, 5550, -83,
	597, -83, -83, 1004, 274, -83, -83, -83, -83, -83, -83, -83, -83, 7002, 5226,
	-83, -83, -83, 7843, 7843, -83, 70, 7843, -83, 486, 677, 488, 677, 679, 677,
	495, 497, 677, 684, 677, 491, 685, 677, 625, 680, -83, 5789, 7670, 157, 518,
	-83, 630, -83, -83, 510, 677, 520, -83, 522, 677, 529, 531, 677, 687, 677,
	-83, -83, 336, 336, 7546, -83, 7546, -83, 7002, 683, -83, -83, 6484, 69,
	5710, 5710, 1562, 1642, 1722, 1802, 1882, 1962, 2042, 2122, 2202, 2282, 2362,
	2442, 2522, 2602, 2682, 2762, 2842, 2922, 3002, 3082, 3162, 3242, 3322, 3402,
	3482, 3562, 3642, 3722, 3802, 3882, 3962, 4042, 4122, 7002, 8596, -83, -83,
	389, -83, 7843, 7843, 398, 391, 681, -83, -83, -83, -83, -83, 7002, -83, 689,
	-83, 212, -83, 5830, -83, -83, 532, -83, 535, 677, 542, -83, -83, 549, 677,
	551, 677, 692, 677, 553, -83, -83, 271, 7723, 700, -9, 5055, -83, -83, -83,
	6527, -83, -83, 260, -15, 6608, -83, -83, -83, -83, -83, 83, -83, -83, -83,
	-83, -83, -83, -83, -83, -83, -83, 555, -83, -83, 565, -83, -83, 567, 677,
	569, -83, -83, 183, 406, -83, 6687, 30, -83, -83, 432, -83, -83, 5710, -83,
	5710, -83, -83, 5830, 7054, -83, -83, -83, 7843, -83, -83, -83, -83, -83,
	-83, 571, -83, -83, 573, -83, 575, 677, 585, -83, 7002, 7843, 7843, 694, -83,
	395, -83, 632, 5226, -83, -3, 698, -83, -83, -83, -83, -83, -83, 5789, -9,
	399, 719, 719, -83, 7843, 7002, 7002, 7843, -83, -83, -83, -83, -83, 7002,
	404, 7843, 719, -83, -83, -83, -83, -83, 705, -83, -83, 102, -83, -83, -83,
	587, -83, -83, -83, -83, -83, 457, 482, -83, -83, -83, -83, -83, -83, 594,
	-83, 7002, -83, 502, -83, 506, -83, 7843, -83, -83, -83, 735, 743, 17, 5308,
	-3, 744, 716, 716, 749, 750, 755, 745, 154, 554, -83, 607, 6766, 7843, 377,
	747, -83, 244, -83, -83, -83, 754, -83, 7843, -83, -83, -83, 17, 264, 4203,
	-83, -83, 757, 17, 758, 761, -83, -83, 716, 763, -83, -83, 7002, -83, -83,
	450, 5830, -83, 7763, -83, -83, -83, -83, 4203, -83, -83, -83, 760, 4259,
	-83, 4308, 17, 4203, -83, -83, -83, 767, -83, -83, 5830, -83, 774, 6847,
	4259, -83, 4390, -83, -83, 4472, -83, 4203, -83, 4259, -83, 4554, -83, 775,
	-83, -83, 4636, -83, -83, 4259, -83, 4718, -83, 4800, -83, -83, -83, -83,
	4882, -83, -83, -83, 779, 791, -83, -83,
}

const tmTableLen = 8786

var tmTable = []int16{
	148, -94, 353, 30, 30, -176, -489, -95, 30, 372, -87, 30, -461, 439, 148,
	372, 636, 148, -1, 232, -1, -1, -1, -1, -1, 148, 214, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -560, -1, -1, -1, -4, -226, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -293, -505, -506, -1, -1, -1, -1, -1, -1, 30, 149,
	-89, -102, -86, 148, -89, 148, -87, 232, -179, -88, -89, -226, 88, 149, -357,
	77, 149, -185, -394, 341, 508, 148, 232, 148, 149, -423, 148, 148, 462, 341,
	-1, -526, -495, -248, -395, -496, 356, 396, -288, -289, -197, -290, 148,
	-249, 148, 356, 148, 215, 148, 148, -291, -549, 209, 214, -550, -113, 396,
	396, 398, -396, 356, 148, 214, -397, 175, -292, 179, 148, 334, 334, 149, 334,
	229, 148, -174, 380, 148, 398, 398, -87, -99, -86, -202, -86, 390, -87, 334,
	-87, 149, 560, 149, -185, -394, 149, 149, 381, -205, 166, 148, 190, 148, 269,
	148, 269, 391, 148, 182, 148, -395, 149, 148, 149, 527, 149, 377, 149, 149,
	-201, 584, -206, 590, 531, 336, 148, 593, 396, 362, 148, 229, -113, 148,
	-195, 148, -396, 149, 362, -87, -397, 399, 210, 149, 214, 284, 229, 605, 214,
	398, 334, 334, 608, -292, 294, 611, 614, 285, 259, -572, 413, 414, 285, 337,
	-437, 285, 396, 619, 149, 601, 149, 285, 149, 541, 624, 149, 626, 149, -180,
	-86, 149, -185, -394, -87, 562, 334, 631, 398, -267, 525, -245, 465, 616,
	149, -268, 269, 271, 149, -395, -581, 149, 214, 149, 396, 336, 423, -220,
	287, 491, -85, -86, 466, 287, 148, -87, 287, 389, -88, 148, -113, 148, 287,
	148, -396, 398, 382, 383, -397, 492, 437, 377, 384, -221, 417, 470, -244,
	209, 215, 209, -243, -245, -89, 422, -251, -473, 534, 535, 90, -474, -475,
	-587, 89, -476, -477, 351, -478, -453, -479, -480, 559, 545, -350, -481, 148,
	-482, 387, -483, 399, -484, 401, 214, -485, -89, -185, -394, 402, -199, 334,
	-588, 334, 149, -87, 380, -454, -351, 149, -455, 149, 583, 149, 433, 99, 102,
	155, 592, 98, 101, 120, 173, 176, 148, 181, 381, 214, 437, 180, -188, 155,
	194, -226, 155, 198, 388, 202, -227, -396, -297, 201, 155, -397, 396, 377,
	610, 415, -578, 416, -298, -579, 214, 214, 149, 336, 588, 336, -427, -260,
	214, 490, 382, 467, -87, 398, 465, -433, 468, 519, 519, -524, -428, 396, 349,
	-432, 361, 346, 122, 460, 603, -525, -429, 502, 349, 361, 466, -272, 226,
	612, 231, 149, 214, 506, 398, 507, 396, -253, -258, -226, 361, -427, -87,
	-87, -274, 377, 155, 622, 155, 252, -534, 155, 155, 257, 260, -507, 516, 398,
	214, 495, -476, -601, -89, 390, -602, -429, 334, 155, 189, 155, -535, 155,
	-226, 155, 155, 282, -484, -278, 378, -283, 334, 537, 538, 391, -87, 399,
	231, 491, 214, 417, -429, 335, 155, 382, 383, -226, 379, -226, 155, 384,
	-359, 347, -361, 460, -226, 335, -226, 492, -370, -365, 582, -366, 460, -87,
	437, 335, -554, 118, -555, -226, -556, 551, -555, 155, -405, 155, -272, 155,
	464, -226, 155, -226, 155, 369, -407, 155, -408, 437, -226, 526, -226, -226,
	589, -410, -226, -411, -442, 502, 155, -443, 170, -226, 155, 382, 467, 155,
	-445, 155, -226, 468, -226, 268, -226, -446, -226, -448, 604, -452, -573,
	-499, -574, 607, 460, 609, -226, 613, -226, 538, -226, -500, -226, -501,
	-226, -503, -226, -513, 618, -514, 620, -515, 244, 621, 389, 623, -226, 625,
	-226, 627, -106, -517, 461, -551, 629, -226, -107, 630, 281, 632, -552, 633,
	540, 281, -108, 580, 634, -109, 490, -110, -111, -87, 281, -575, 457, -437,
	518, 520, -255, -263, -264, -185, -266, 489, -112, -269, -276, 155, -113,
	-114, -115, -374, 155, 602, 155, -116, 155, -117, -118, -119, -120, -121,
	-122, -123, -124, -125, -126, -127, -128, -129, -130, -131, -132, -133, -134,
	-135, -136, -137, -138, -139, -140, -141, -142, -143, -144, -145, -146, -147,
	-148, -149, -106, 464, 486, 418, 529, 223, -107, 155, 281, 217, 388, -280,
	-285, 281, -108, 530, -375, -109, -363, -110, -111, -87, 379, -368, -372,
	-268, -413, 598, -421, -434, -436, -450, 356, -460, -112, -526, 91, -530,
	-113, -114, -115, 344, -523, -394, 155, -116, -548, -117, -118, -119, -120,
	-121, -122, -123, -124, -125, -126, -127, -128, -129, -130, -131, -132, -133,
	-134, -135, -136, -137, -138, -139, -140, -141, -142, -143, -144, -145, -146,
	-147, -148, -149, -558, 103, -559, -565, -116, -568, -569, -106, -570, -87,
	-583, 555, -580, -107, -596, 281, -593, -597, 436, -599, -639, -108, 543,
	-617, -109, -608, -110, -111, -87, 281, -619, -630, -640, 635, 78, 3, 95, 96,
	191, 456, 587, -112, 484, 485, 539, -113, -114, -115, 293, 216, 169, 342,
	-116, 569, -117, -118, -119, -120, -121, -122, -123, -124, -125, -126, -127,
	-128, -129, -130, -131, -132, -133, -134, -135, -136, -137, -138, -139, -140,
	-141, -142, -143, -144, -145, -146, -147, -148, -149, -106, 489, 343, 496, 0,
	0, -230, 0, 279, 0, 0, 0, 0, 279, -108, 0, 0, 0, 0, -110, -111, -87, 279, 0,
	223, 0, 0, 0, 542, 420, 0, 0, 0, 0, -112, 0, 0, 0, -113, -114, -115, 0, 0, 0,
	0, -116, 0, -117, -118, -119, -120, -121, -122, -123, -124, -125, -126, -127,
	-128, -129, -130, -131, -132, -133, -134, -135, -136, -137, -138, -139, -140,
	-141, -142, -143, -144, -145, -146, -147, -148, -149, -106, 0, 0, 0, 509, 0,
	-230, 0, 279, 0, 0, 0, 0, 0, -108, 0, 0, 0, 0, -110, -111, -87, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -112, 0, 0, 0, -113, -114, -115, 0, 0, 0, -294, -116,
	0, -117, -118, -119, -120, -121, -122, -123, -124, -125, -126, -127, -128,
	-129, -130, -131, -132, -133, -134, -135, -136, -137, -138, -139, -140, -141,
	-142, -143, -144, -145, -146, -147, -148, -149, -106, 37, 0, 0, 0, 0, -230,
	0, 275, 0, 185, 0, 81, 275, -108, 0, 0, 82, 0, -110, -111, -87, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -112, 0, 0, 0, -113, -114, -115, 0, 0, 0, 0, -116, 0,
	-117, -118, -119, -120, -121, -122, -123, -124, -125, -126, -127, -128, -129,
	-130, -131, -132, -133, -134, -135, -136, -137, -138, -139, -140, -141, -142,
	-143, -144, -145, -146, -147, -148, -149, 0, 0, 0, -106, 0, 167, 168, 0, 0,
	-107, 0, 277, 0, 0, 184, 187, 277, -108, 0, 0, 263, 0, -110, -111, -87, 277,
	205, 207, 0, 0, 0, 0, 0, 0, 0, 0, 0, -112, 0, 0, 0, 0, -114, -115, 0, 0, 0,
	0, -116, 0, -117, -118, -119, -120, -121, -122, -123, -124, -125, -126, -127,
	-128, -129, -130, -131, -132, -133, -134, -135, -136, -137, -138, -139, -140,
	-141, -142, -143, -144, -145, -146, -147, -148, -149, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151, 0, 0, 0, 397, 0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	0, 0, 151, 0, 0, 0, 0, 0, 397, 397, 151, 0, 207, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 207, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 171, 352, 354, 0, 0, 168, 0, 0, 0, 151, 0, 151, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	208, 0, 0, 376, 37, 0, 151, 0, 151, 397, 0, 151, 151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 151, 207, 151, 0, 151, 0, 151, 151, 0, 333, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 397, 0, 0, 0, 0, 151, 335, 151, 0, 151, 0, 151, 0, 0,
	151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 350, 0, 0, 0, 0, 0, 207, 207, 0, 0, 0, 0,
	151, 397, 151, 0, 151, 0, 0, 151, 0, 151, 207, 0, 151, 0, 0, 0, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 0, 0, 151, 455, 341, 151, 376, 151, 0, 0, 0, 0, 0, 0,
	0, 37, 0, 0, 0, 0, 0, 0, 335, 335, 0, 0, 0, 0, 0, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 333, 0, 333, 0, 424, 207,
	207, 0, 0, 0, 510, 0, 0, 0, 0, 0, 0, 0, 208, 0, 208, 0, 0, 0, 0, 0, 0, 517,
	517, 0, 0, 0, 151, 0, 0, 0, 0, 151, 397, 151, 0, 151, 0, 0, 376, 0, 0, 0, 0,
	0, 536, 0, 0, 352, 0, 0, 0, 0, 0, 0, 0, 544, 0, 0, 0, 0, 0, 397, 0, 428, 429,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 151, 0, 0, 438, 0, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 335, 455, 335, 0, 0, 0, 0, 0, 376, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 151, 0, 0, 0, 0, 0, 0, 0, 0, 517, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	72, 0, 0, 0, 0, 0, 0, 0, 72, 0, 207, 72, 37, 0, 72, 0, 72, 0, 0, 438, 341, 0,
	0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0, 207, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	72, 10, 0, 0, 0, 0, 0, 0, 0, 84, 0, 10, 0, 0, 0, 0, 0, 84, 0, 0, 84, 0, 0,
	84, 0, 84, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, 0, 10, 10, 0, 0, 0, 0, 0,
	0, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
	10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 84, 1, 0, 0, 0, 0, 0,
	0, 0, 75, 0, 1, 0, 0, 438, 0, 0, 75, 0, 0, 75, 0, 0, 75, 0, 75, 0, 0, 0, 0,
	0, 0, 0, 75, 0, 0, 0, 438, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	75, 23, 0, 0, 0, 0, 0, 0, 0, 97, 0, 23, 0, 0, 0, 0, 0, 97, 0, 0, 97, 0, 0,
	97, 0, 97, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0, 0, 0, 0, 0, 23, 23, 0, 0, 0, 0, 0,
	0, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 97, 11, 0, 0, 0, 0,
	0, 0, 0, 85, 0, 11, 0, 0, 0, 0, 0, 85, 0, 0, 85, 0, 0, 85, 0, 85, 0, 0, 0, 0,
	0, 0, 0, 85, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 85, 21, 0, 0, 0, 0, 0, 0, 0, 95, 0, 21, 0, 0,
	0, 0, 0, 95, 0, 0, 95, 0, 0, 95, 0, 95, 0, 0, 0, 0, 0, 0, 0, 95, 0, 0, 0, 0,
	0, 0, 21, 21, 0, 0, 0, 0, 0, 0, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 95, 22, 0, 0, 0, 0, 0, 0, 0, 96, 0, 22, 0, 0, 0, 0, 0, 96, 0, 0, 96,
	0, 0, 96, 0, 96, 0, 0, 0, 0, 0, 0, 0, 96, 0, 0, 0, 0, 0, 0, 22, 22, 0, 0, 0,
	0, 0, 0, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 96, 14, 0, 0, 0,
	0, 0, 0, 0, 88, 0, 14, 0, 0, 0, 0, 0, 88, 0, 0, 88, 0, 0, 88, 0, 88, 0, 0, 0,
	0, 0, 0, 0, 88, 0, 0, 0, 0, 0, 0, 14, 14, 0, 0, 0, 0, 0, 0, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 88, 26, 0, 0, 0, 0, 0, 0, 0, 100, 0, 26,
	0, 0, 0, 0, 0, 100, 0, 0, 100, 0, 0, 100, 0, 100, 0, 0, 0, 0, 0, 0, 0, 100,
	0, 0, 0, 0, 0, 0, 26, 26, 0, 0, 0, 0, 0, 0, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 100, 17, 0, 0, 0, 0, 0, 0, 0, 91, 0, 17, 0, 0, 0, 0, 0,
	91, 0, 0, 91, 0, 0, 91, 0, 91, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 17,
	17, 0, 0, 0, 0, 0, 0, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 91,
	9, 0, 0, 0, 0, 0, 0, 0, 83, 0, 9, 0, 0, 0, 0, 0, 83, 0, 0, 83, 0, 0, 83, 0,
	83, 0, 0, 0, 0, 0, 0, 0, 83, 0, 0, 0, 0, 0, 0, 9, 9, 0, 0, 0, 0, 0, 0, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 9, 83, 13, 0, 0, 0, 0, 0, 0, 0, 87, 0, 13, 0, 0, 0, 0, 0, 87, 0, 0,
	87, 0, 0, 87, 0, 87, 0, 0, 0, 0, 0, 0, 0, 87, 0, 0, 0, 0, 0, 0, 13, 13, 0, 0,
	0, 0, 0, 0, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 87, 27, 0, 0,
	0, 0, 0, 0, 0, 101, 0, 27, 0, 0, 0, 0, 0, 101, 0, 0, 101, 0, 0, 101, 0, 101,
	0, 0, 0, 0, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 27, 27, 0, 0, 0, 0, 0, 0, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 101, 2, 0, 0, 0, 0, 0, 0, 0, 76,
	0, 2, 0, 0, 0, 0, 0, 76, 0, 0, 76, 0, 0, 76, 0, 76, 0, 0, 0, 0, 0, 0, 0, 76,
	0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 76, 5, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 5, 0, 0, 0, 0, 0, 79, 0, 0, 79, 0, 0, 79, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	79, 24, 0, 0, 0, 0, 0, 0, 0, 98, 0, 24, 0, 0, 0, 0, 0, 98, 0, 0, 98, 0, 0,
	98, 0, 98, 0, 0, 0, 0, 0, 0, 0, 98, 0, 0, 0, 0, 0, 0, 24, 24, 0, 0, 0, 0, 0,
	0, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 98, 30, 0, 0, 0, 0,
	0, 0, 0, 104, 0, 30, 0, 0, 0, 0, 0, 104, 0, 0, 104, 0, 0, 104, 0, 104, 0, 0,
	0, 0, 0, 0, 0, 104, 0, 0, 0, 0, 0, 0, 30, 30, 0, 0, 0, 0, 0, 0, 30, 30, 30,
	30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
	30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 104, 29, 0, 0, 0, 0, 0, 0, 0, 103, 0,
	29, 0, 0, 0, 0, 0, 103, 0, 0, 103, 0, 0, 103, 0, 103, 0, 0, 0, 0, 0, 0, 0,
	103, 0, 0, 0, 0, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 29, 29, 29, 29, 29, 29, 29,
	29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
	29, 29, 29, 29, 29, 29, 103, 28, 0, 0, 0, 0, 0, 0, 0, 102, 0, 28, 0, 0, 0, 0,
	0, 102, 0, 0, 102, 0, 0, 102, 0, 102, 0, 0, 0, 0, 0, 0, 0, 102, 0, 0, 0, 0,
	0, 0, 28, 28, 0, 0, 0, 0, 0, 0, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 102, 6, 0, 0, 0, 0, 0, 0, 0, 80, 0, 6, 0, 0, 0, 0, 0, 80, 0, 0, 80,
	0, 0, 80, 0, 80, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 6, 6, 0, 0, 0, 0,
	0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 80, 31, 0, 0, 0, 0, 0, 0, 0, 105, 0, 31, 0, 0, 0, 0,
	0, 105, 0, 0, 105, 0, 0, 105, 0, 105, 0, 0, 0, 0, 0, 0, 0, 105, 0, 0, 0, 0,
	0, 0, 31, 31, 0, 0, 0, 0, 0, 0, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 105, 15, 0, 0, 0, 0, 0, 0, 0, 89, 0, 15, 0, 0, 0, 0, 0, 89, 0, 0, 89,
	0, 0, 89, 0, 89, 0, 0, 0, 0, 0, 0, 0, 89, 0, 0, 0, 0, 0, 0, 15, 15, 0, 0, 0,
	0, 0, 0, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 89, 18, 0, 0, 0,
	0, 0, 0, 0, 92, 0, 18, 0, 0, 0, 0, 0, 92, 0, 0, 92, 0, 0, 92, 0, 92, 0, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 0, 0, 18, 18, 0, 0, 0, 0, 0, 0, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 92, 8, 0, 0, 0, 0, 0, 0, 0, 82, 0, 8, 0,
	0, 0, 0, 0, 82, 0, 0, 82, 0, 0, 82, 0, 82, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0, 0,
	0, 0, 0, 8, 8, 0, 0, 0, 0, 0, 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
	8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 82, 12, 0, 0, 0, 0, 0, 0,
	0, 86, 0, 12, 0, 0, 0, 0, 0, 86, 0, 0, 86, 0, 0, 86, 0, 86, 0, 0, 0, 0, 0, 0,
	0, 86, 0, 0, 0, 0, 0, 0, 12, 12, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 86, 16, 0, 0, 0, 0, 0, 0, 0, 90, 0, 16, 0, 0, 0,
	0, 0, 90, 0, 0, 90, 0, 0, 90, 0, 90, 0, 0, 0, 0, 0, 0, 0, 90, 0, 0, 0, 0, 0,
	0, 16, 16, 0, 0, 0, 0, 0, 0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 90, 32, 0, 0, 0, 0, 0, 0, 0, 106, 0, 32, 0, 0, 0, 0, 0, 106, 0, 0, 106,
	0, 0, 106, 0, 106, 0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 32, 32, 0, 0,
	0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 106, 3, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 3, 0, 0, 0, 0, 0, 77, 0, 0, 77, 0, 0, 77, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 77, 7, 0, 0, 0, 0, 0, 0, 0, 81, 0, 7, 0, 0, 0, 0, 0, 81, 0, 0, 81, 0, 0,
	81, 0, 81, 0, 0, 0, 0, 0, 0, 0, 81, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 81, 19, 0, 0, 0, 0, 0, 0, 0, 93, 0, 19, 0, 0, 0, 0, 0, 93,
	0, 0, 93, 0, 0, 93, 0, 93, 0, 0, 0, 0, 0, 0, 0, 93, 0, 0, 0, 0, 0, 0, 19, 19,
	0, 0, 0, 0, 0, 0, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
	19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 93, 4, 0,
	0, 0, 0, 0, 0, 0, 78, 0, 4, 0, 0, 0, 0, 0, 78, 0, 0, 78, 0, 0, 78, 0, 78, 0,
	0, 0, 0, 0, 0, 0, 78, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 78, 25, 0, 0, 0, 0, 0, 0, 0, 99, 0, 25, 0, 0, 0, 0, 0, 99, 0, 0, 99, 0,
	0, 99, 0, 99, 0, 0, 0, 0, 0, 0, 0, 99, 0, 0, 0, 0, 0, 0, 25, 25, 0, 0, 0, 0,
	0, 0, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 99, 20, 0, 0, 0, 0,
	0, 0, 0, 94, 0, 20, 0, 0, 0, 0, 0, 94, 0, 0, 94, 0, 0, 94, 0, 94, 0, 0, 0, 0,
	0, 0, 0, 94, 0, 0, 0, 0, 0, 0, 20, 20, 0, 0, 0, 0, 0, 0, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 94, -1, 0, -394, -1, -1, -1, -1, 0, 0, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -560, -1, -1, -1, 0, 0, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, -1, -1, -1, -1, -1, -1, 0,
	0, 0, 0, 0, 0, 0, 0, -1, 0, -1, -1, -1, -1, -1, 0, 0, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -560, -1, -1, -1, -149, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, 0, 0, 0, -1, -1, -1, -1, -1, -1, 193, 0, 193, 0, 0,
	0, 0, 0, 193, 193, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 193, 193, 0,
	0, 0, 0, 0, -149, -1, 0, 0, 0, 0, 0, 0, 193, 193, 193, 0, 0, 0, 0, 0, 0, 193,
	193, 193, 193, 193, 193, 193, 193, 193, 193, 193, 193, 193, 193, 193, 193,
	193, 193, 193, 193, 193, 193, 193, 193, 193, 193, 193, 193, 193, 193, 193,
	193, -149, 183, 0, 183, 0, 0, 0, 0, 0, 183, 183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 183, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183, 183,
	183, 0, 0, 0, 0, 0, 0, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, -149, 189, 0, 189, 0, 0, 0, 0, 0, 189, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 189, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 189, 189, 0, 0, 0, 0, 0, 0, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, -149, 173, 0, 173, 0,
	0, 0, 0, 0, 173, 173, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 173, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 173, 173, 173, 0, 0, 0, 0, 0, 0, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, -149, 179, 0, 179, 0, 0, 0, 0, 0, 179, 179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 179, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 179, 179,
	179, 0, 0, 0, 0, 0, 0, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, -149, 163, 0, 163, 0, 0, 0, 0, 0, 163, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 163, 163, 0, 0, 0, 0, 0, 0, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, -149, 169, 0, 169, 0,
	0, 0, 0, 0, 169, 169, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 169, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 169, 169, 169, 0, 0, 0, 0, 0, 0, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, -149, 159, 0, 159, 0, 0, 0, 0, 0, 159, 159, 150, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 0, 150, 159, 159, 150, 0, 0, 0, 0, 0, 0, 0, 150, 0, 0, 0, 0,
	159, 159, 159, 0, 0, 0, 0, 0, 0, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, -149, 0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 150, 0, 150, 0, 0, 150, 150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 150, 0, 150, 0, 150, 0, 150, 150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 150, 0, 0, 0, 0, 0, 150, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 131, 0, -106, 150, 0, 150, 0, 150,
	-376, 131, 150, 0, 150, 165, 0, 150, 0, 0, 0, 0, 0, 400, 0, 0, 0, 0, -377,
	165, 150, 0, 165, 0, 150, 0, 0, 150, 0, 150, 165, 0, -113, -302, -115, 0, 0,
	0, 0, 0, 0, -303, -304, -305, -306, -307, -308, -309, -310, -311, -312, -313,
	-314, -315, -316, -317, -318, -319, -320, -321, -322, -323, -324, -325, -326,
	-327, -328, -329, -330, -331, -332, -333, -334, 0, 0, 0, 165, 0, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 165, 0, 165, 0, 0, 165, 165, 0, 0, 0,
	0, 0, 0, 150, 0, 0, 0, 0, 150, 0, 150, 165, 150, 165, 0, 165, 0, 165, 165, 0,
	463, 0, 0, 0, 0, 0, 0, 0, 0, 488, 165, 0, 0, 0, 0, 400, 165, 0, 165, 0, 165,
	0, 165, 0, 0, 165, 0, 0, 0, 0, 0, 0, 0, 150, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 165, 0, 165, 0, 0, 165, 0, 165, 0, 0, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 150, 0, 165, 0, 0, 0, 165, 0, 0, 165, -40, 165, -41, -42, -43, -44,
	-45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -56, -57, -58, -59,
	-60, -61, -62, -63, -64, -65, -66, -67, -68, -69, -70, -71, -72, -73, -74,
	-75, -76, -77, -78, 0, 0, 0, -106, 0, 0, 0, 0, 0, -376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -563, -377, 0, 0, 0, 463, 0, 0, 0, 0, 0, 0, 0,
	165, 0, -113, -302, -115, 165, 0, 165, 0, 165, 400, -303, -304, -305, -306,
	-307, -308, -309, -310, -311, -312, -313, -314, -315, -316, -317, -318, -319,
	-320, -321, -322, -323, -324, -325, -326, -327, -328, -329, -330, -331, -332,
	-333, -334, 0, 0, 0, 0, 0, 0, 0, 165, 0, 0, 0, 0, 0, 0, 0, 26, 26, 0, 0, 0,
	26, 0, 488, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, 0, 0, 0, 0,
	165, 0, -7, -8, -9, -10, -11, -12, -13, -81, -15, -16, -17, -18, -82, -20,
	-21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35,
	-36, -37, -38, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2, 2, 0, 0, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6,
	0, 0, 0, 0, 0, 564, 565, -7, -8, -9, -10, -11, -12, -13, -81, -15, -16, -17,
	-18, -82, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32,
	-33, -34, -35, -36, -37, -38, 2, -106, 596, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -112, 0, 0,
	0, 0, -114, -115, 0, 0, 0, 0, -116, 0, -117, -118, -119, -120, -121, -122,
	-123, -124, -125, -126, -127, -128, -129, -130, -131, -132, -133, -134, -135,
	-136, -137, -138, -139, -140, -141, -142, -143, -144, -145, -146, -147, -148,
	128, 0, 0, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 0, 0, 0, -96, 0, 0,
	0, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, -106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -301, 0, 0, 0, 0, 0, 0, 0, -302, -115, 0, 0,
	0, 0, 0, 0, -303, -304, -305, -306, -307, -308, -309, -310, -311, -312, -313,
	-314, -315, -316, -317, -318, -319, -320, -321, -322, -323, -324, -325, -326,
	-327, -328, -329, -330, -331, -332, -333, -334, -106, 0, 0, 0, 0, 0, -376, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -302, -115, -185, -394, 0, 0, 0, 0, -303, -304, -305, -306,
	-307, -308, -309, -310, -311, -312, -313, -314, -315, -316, -317, -318, -319,
	-320, -321, -322, -323, -324, -325, -326, -327, -328, -329, -330, -331, -332,
	-333, -334, 0, -6, 0, 0, -396, 0, 0, 0, -397, -7, -8, -9, -10, -11, -12, -13,
	-81, -15, -16, -17, -18, -82, -20, -21, -22, -23, -24, -25, -26, -27, -28,
	-29, -30, -31, -32, -33, -34, -35, -36, -37, -38, 161, 0, 0, 0, 347, 0, -341,
	0, 0, 0, -342, 0, 0, 0, 161, 0, 0, 161, -6, 0, 0, 0, 0, 0, 0, 161, -7, -8,
	-9, -10, -11, -12, -13, -81, -15, -16, -17, -18, -82, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 161, 0, 161, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 0, 162, 0, 0, 0, 0, 161, 0, 161, 162, 0, 161, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 0, 161, 0, 161, 0, 161, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 0, 0, 0, 0, 0, 161, 0, 338, 162, 345, 162, 161, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 0, 162, 0, 0, 162, 162, 0, 0, 0, 161, 0,
	161, 0, 161, 0, 0, 161, 0, 161, 0, 162, 161, 162, 0, 162, 0, 162, 162, 0, 0,
	0, 0, 0, 0, 161, 0, 0, 0, 161, 162, 0, 161, 0, 161, 0, 162, 163, 162, 0, 162,
	0, 162, 0, 0, 162, 0, 0, 0, 0, 0, 163, 0, 0, 163, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 0, 0, 0, 162, 0, 162, 0, 162, 0, 0, 162, 0, 162, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 162, 0, 0, 162, 0, 162, 0, 0, 0, 0, 0, 0,
	163, 0, 163, 0, 161, 0, 0, 0, 0, 161, 0, 161, 0, 161, 0, 0, 0, 0, 163, 0,
	163, 0, 0, 163, 163, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 163,
	0, 163, 0, 163, 163, 0, 0, 0, 0, 0, 0, 0, 161, 0, 0, 0, 163, 0, 164, 0, 0, 0,
	163, 0, 163, 0, 163, 0, 163, 162, 0, 163, 164, 0, 162, 164, 162, 0, 162, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 0, 161, 0, 0, 0, 163, 0, 163, 0, 163, 0, 0, 163, 0,
	163, 0, 0, 163, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 162, 0, 0, 163, 0,
	0, 163, 0, 163, 0, 164, 0, 164, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 164, 0, 0, 164, 164, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 164,
	0, 164, 0, 164, 0, 164, 164, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 0,
	0, 0, 164, 0, 164, 0, 164, 0, 164, 0, 0, 164, 0, 0, 163, 0, 0, 0, 0, 163,
	124, 163, 0, 163, 0, 0, 0, 0, 0, -188, 0, 0, 0, 164, 0, 164, 0, 164, 0, 0,
	164, 0, 164, 0, 0, 164, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 164, 0, -113, -6,
	164, 0, 163, 164, 0, 164, 0, -7, -8, -9, -10, -11, -12, -13, -81, -15, -16,
	-17, -18, -82, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31,
	-32, -33, -34, -35, -36, -37, -38, 163, 0, 0, 0, 0, 0, 0, -106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-215, 0, 0, 0, 0, 0, 0, 164, 0, -114, -115, 0, 164, -106, 164, 0, 164, -117,
	-118, -119, -120, -121, -122, -123, -124, -125, -126, -127, -128, -129, -130,
	-131, -132, -133, -134, -135, -136, -137, -138, -139, -140, -141, -142, -143,
	-144, -145, -146, -147, -148, 0, -471, 0, -114, -115, 0, 0, 0, 164, 0, 0,
	-117, -118, -119, -120, -121, -122, -123, -124, -125, -126, -127, -128, -129,
	-130, -131, -132, -133, -134, -135, -136, -137, -138, -139, -140, -141, -142,
	-143, -144, -145, -146, -147, -148, 133, 0, 164, 0, 0, 0, 0, 0, -387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -113, -6, 0, 0, 0, 0, 0, 0, 0, -7, -8, -9, -10, -11, -12, -13, -14,
	-15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29,
	-30, -31, -32, -33, -34, -35, -36, -37, -38, -106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -114, -115, 0, 0, 0, 0, 0, 0, -117, -118, -119, -120, -121, -122,
	-123, -124, -125, -126, -127, -128, -129, -130, -131, -132, -133, -134, -135,
	-136, -137, -138, -139, -140, -141, -142, -143, -144, -145, -146, -147, -148,
	-106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -576, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -114, -115, 0, 0, 0, 0, 0, 0,
	-117, -118, -119, -120, -121, -122, -123, -124, -125, -126, -127, -128, -129,
	-130, -131, -132, -133, -134, -135, -136, -137, -138, -139, -140, -141, -142,
	-143, -144, -145, -146, -147, -148, 132, 0, 0, 0, 0, 0, 0, 0, -387, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -113, -6, 0, 0, 0, 0, 0, 0, 0, -7, -8, -9, -10, -11, -12, -13, -14,
	-15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29,
	-30, -31, -32, -33, -34, -35, -36, -37, -38, -1, -1, 0, -1, -1, -1, -1, -1,
	0, -1, 0, -1, -1, -1, -1, 0, 0, -1, -1, -1, -1, 0, 0, 0, 0, -1, -1, -1, -1,
	-1, -1, -238, -1, -1, -1, -1, 0, -1, -1, -1, 0, 0, 0, -1, -1, -1, 0, 0, -1,
	0, 0, 342, 0, 0, 0, 0, 0, 0, 0, 0, 0, 342, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -6, -106, 0, 0, 0, 0, 0, -1, -7, -8, -9, -10, -11, -12, -13, -81, -15,
	-16, -17, -18, -82, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30,
	-31, -32, -33, -34, -35, -36, -37, -38, -114, -115, 0, 0, 0, 0, 0, 0, -117,
	-118, -119, -120, -121, -122, -123, -124, -125, -126, -127, -128, -129, -130,
	-131, -132, -133, -134, -135, -136, -137, -138, -139, -140, -141, -142, -143,
	-144, -145, -146, -147, -148, -341, 0, 0, 0, -342, 0, 0, 0, 0, 0, 0, 0, -6,
	0, 0, 0, 0, 0, 0, 0, -7, -8, -9, -10, -11, -12, -13, -81, -15, -16, -17, -18,
	-82, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33,
	-34, -35, -36, -37, -38, 158, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 158, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 159, 0, 0, 159, 0, 0, 0, 0, 0, 0, 0, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 233, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 158, 0, 0, 158, 158, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 159, 0, 234,
	158, 0, 158, 0, 158, 0, 158, 158, 0, 0, 0, 0, 0, 0, 0, 159, 0, 159, 0, 233,
	159, 159, 0, 0, 0, 158, 0, 0, 0, 0, 0, 158, 0, 0, 233, 0, 159, 0, 159, 0,
	159, 0, 159, 159, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 234, 158, 0, 158, 0, 158,
	159, 160, 158, 0, 158, 0, 159, 158, 0, 234, 0, 0, 0, 0, 0, 160, 0, 0, 160, 0,
	158, 0, 0, 0, 158, 0, 160, 158, 0, 158, 0, 159, 0, 159, 0, 159, 0, 0, 159, 0,
	159, 0, 0, 159, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 159, 0, 0, 0, 159, 0, 0,
	159, 0, 159, 0, 0, 0, 0, 0, 0, 160, 0, 235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 160, 0, 0, 160, 160, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 0, 0, 160, 158, 160, 158, 160, 158, 160, 160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 0, 160, 0, 0, 0, 0, 0, 160, 159, 0, 235, 0, 0, 159, 0,
	159, 0, 159, 0, 0, 0, 0, 158, 0, 0, 0, 0, 0, 0, 0, 0, 0, 160, 0, 160, 0, 160,
	0, 0, 160, 0, 160, 0, 0, 160, 0, 0, 0, 0, -185, 0, 0, 0, 0, 0, 0, 0, 160,
	159, 158, 0, 160, 0, 0, 160, 0, 160, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -6, 0, 0, 0, 0, 0, 0, 159, -7, -8, -9, -10, -11, -12,
	-13, -81, -15, -16, -17, -18, -82, -20, -21, -22, -23, -24, -25, -26, -27,
	-28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -208, 0, 0, 0, 0, 0, 0, 160, 0, -6, 0, 0, 160, 0, 160, 0, 160, -7, -8,
	-9, -10, -11, -12, -13, -81, -15, -16, -17, -18, -82, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, 0,
	0, 0, 0, 0, 0, 0, 0, 160, -1, -1, 0, -1, -1, -1, -1, -1, 0, -1, 0, -1, -1,
	-1, -1, 0, 0, -1, -1, -1, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, 0, -1, -1,
	-1, -1, 160, -1, -1, -1, 0, 0, -387, -239, -1, -1, 0, 0, -1, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, 0, 0,
	0, 0, 0, -1, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19,
	-20, -21, -388, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34,
	-35, -36, -37, -38, -456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, 0, 0, 0,
	0, 0, -387, -7, -8, -9, -10, -11, -12, -13, -81, -15, -16, -17, -18, -82,
	-20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34,
	-35, -36, -37, -38, -6, 0, 0, 0, 0, 0, 0, 0, -7, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28,
	-29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -6, 0, 0, 0, 0, 0, 0, 0,
	-7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37,
	-38, -6, 0, 0, 0, 0, 0, 0, 0, -7, -8, -9, -10, -11, -12, -13, -81, -15, -16,
	-17, -18, -82, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31,
	-32, -33, -34, -35, -36, -37, -38, -1, -1, 0, -1, -1, -1, -1, -1, 0, -1, 0,
	-1, -1, -1, -1, 0, 0, -1, -1, -240, -1, 0, 0, 0, 0, -1, -1, -1, -241, -242,
	-1, 0, -1, -1, -1, -1, 156, -1, -1, -1, 0, 0, 0, 0, -1, -1, 0, 0, -1, 0, 156,
	0, 0, 156, 0, 0, 0, 0, 0, 0, 0, 212, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 157, 0, 0, 157, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 156, 0, 156, 0, 0, 156, 156, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 156, 0, 156, 0, 156, 0, 156, 156, 0, 0, 0, 0, 0, 0, 0, 157, 0, 157, 0, 0,
	157, 157, 0, 0, 0, 156, 0, 0, 0, 0, 0, 156, 0, 0, 0, 0, 157, 0, 157, 0, 157,
	0, 157, 157, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 156, 0, 156, 0, 156, 157,
	153, 156, 0, 156, 0, 157, 156, 0, 0, 0, 0, 0, 0, 0, 153, 0, 0, 153, 0, 156,
	0, 0, 0, 156, 0, 153, 156, 0, 156, 0, 157, 0, 157, 0, 157, 0, 154, 157, 0,
	157, 0, 0, 157, 0, 0, 0, 0, 0, 0, 0, 154, 0, 0, 154, 0, 157, 0, 0, 0, 157, 0,
	154, 157, 0, 157, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 153, 0, 0, 153, 153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	0, 0, 0, 153, 156, 153, 156, 153, 156, 153, 153, 0, 0, 0, 0, 0, 0, 0, 154, 0,
	154, 0, 0, 154, 154, 0, 0, 0, 153, 0, 0, 0, 0, 0, 346, 157, 0, 0, 0, 154,
	157, 154, 157, 154, 157, 154, 154, 0, 0, 156, 0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 153, 0, 153, 154, 0, 153, 0, 153, 0, 154, 153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 157, 156, 0, 153, 0, 0, 153, 0, 153, 0, 154, 0, 154, 0, 154, 0,
	0, 154, 0, 154, 0, 0, 154, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 154, 0, 157,
	0, 154, 0, 0, 154, 0, 154, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 0, 0, 0, 153, 0, 153, 0, 153, 152, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 196, 0, 0, 0, 0, 0, 0, 0, 211, 154, 0, 0, 0, 0, 154, 0, 154, 0,
	154, 0, 0, 0, 0, 153, 0, 0, 0, 0, 0, 0, 0, -1, -1, 0, -1, -1, -1, -1, -1, 0,
	-1, 0, -1, -222, -1, -1, 0, 0, -1, -1, 0, -1, 0, 0, 0, 0, -1, -223, -1, 154,
	153, -224, 0, -1, -1, -1, -1, 0, -1, -1, -1, 0, 248, 0, 250, -1, -1, 254,
	255, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 273, 0, 275, 154, 277, 0,
	279, 280, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 0, 360, 0, 362, 0, 0, 365, 0, 367, -1, -1, 371, -1, -1, -1, -1, -1,
	0, -1, 0, -1, -1, -1, -1, 404, 0, -1, -1, 407, -1, 0, 410, 0, 412, -1, -223,
	-1, 0, 0, -1, 0, -1, -1, 0, -1, 0, -1, -1, -1, 0, 0, 0, 0, -1, -1, 0, 0, -1,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 442, 0, 0, 0, 0, 445, 0, 447, 0, 449, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 514,
}

var tmCheck = []int16{
	83, 15, 242, 18, 19, 18, 21, 21, 23, 18, 23, 26, 21, 355, 97, 18, 1, 100, 1,
	156, 3, 4, 5, 6, 7, 108, 109, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 65, 10, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 24,
	28, 29, 43, 44, 45, 46, 47, 48, 81, 83, 81, 18, 19, 154, 81, 156, 23, 212,
	18, 26, 81, 10, 37, 97, 12, 2, 100, 2, 3, 17, 430, 172, 227, 174, 108, 24,
	177, 178, 377, 27, 81, 82, 17, 17, 19, 20, 11, 267, 13, 14, 18, 11, 193, 27,
	195, 20, 197, 109, 199, 200, 20, 17, 107, 204, 20, 40, 286, 287, 267, 44, 35,
	212, 213, 48, 89, 35, 91, 218, 219, 220, 154, 222, 156, 224, 18, 265, 227,
	286, 287, 23, 18, 19, 18, 19, 266, 23, 237, 23, 172, 528, 174, 2, 3, 177,
	178, 265, 52, 84, 249, 95, 251, 15, 253, 17, 266, 256, 93, 258, 19, 193, 261,
	195, 461, 197, 265, 199, 200, 18, 557, 75, 559, 470, 219, 274, 563, 355, 11,
	278, 212, 40, 281, 18, 283, 44, 218, 20, 23, 48, 267, 107, 224, 292, 204,
	227, 583, 296, 355, 298, 299, 588, 35, 213, 591, 592, 10, 180, 70, 286, 287,
	15, 219, 17, 18, 393, 603, 249, 576, 251, 24, 253, 478, 610, 256, 612, 258,
	18, 19, 261, 2, 3, 23, 530, 333, 622, 393, 68, 458, 43, 378, 599, 274, 74,
	188, 189, 278, 19, 20, 281, 349, 283, 430, 298, 299, 21, 10, 387, 18, 19,
	378, 15, 361, 23, 18, 266, 26, 366, 40, 368, 24, 370, 44, 430, 265, 265, 48,
	387, 355, 378, 265, 21, 292, 382, 38, 288, 296, 290, 20, 43, 81, 298, 18, 49,
	472, 473, 37, 53, 54, 51, 37, 57, 58, 238, 60, 50, 62, 63, 528, 487, 52, 67,
	411, 69, 266, 71, 393, 73, 267, 418, 76, 81, 2, 3, 268, 18, 425, 79, 427,
	361, 23, 469, 77, 75, 366, 80, 368, 557, 370, 349, 81, 82, 83, 563, 81, 82,
	0, 88, 89, 448, 91, 469, 451, 430, 91, 9, 97, 98, 10, 100, 101, 266, 103, 15,
	44, 24, 103, 108, 48, 547, 469, 591, 288, 12, 290, 34, 15, 476, 477, 411,
	425, 559, 427, 10, 18, 484, 387, 378, 378, 23, 547, 529, 17, 378, 452, 453,
	17, 24, 576, 17, 18, 11, 27, 0, 377, 583, 27, 34, 418, 27, 20, 529, 9, 154,
	592, 156, 448, 516, 425, 576, 427, 599, 18, 18, 10, 35, 10, 23, 23, 15, 529,
	172, 610, 174, 175, 52, 177, 178, 179, 180, 24, 451, 599, 542, 393, 57, 12,
	81, 578, 15, 34, 10, 193, 95, 195, 72, 197, 10, 199, 200, 201, 73, 15, 265,
	18, 24, 476, 477, 578, 23, 547, 212, 602, 572, 484, 34, 10, 218, 469, 469,
	10, 265, 10, 224, 469, 15, 227, 15, 461, 10, 24, 10, 602, 18, 15, 553, 15,
	470, 23, 576, 34, 15, 0, 17, 10, 15, 516, 17, 249, 15, 251, 9, 253, 378, 10,
	256, 10, 258, 259, 15, 261, 15, 599, 10, 459, 10, 10, 559, 15, 10, 15, 15,
	542, 274, 15, 86, 10, 278, 529, 529, 281, 15, 283, 10, 529, 10, 188, 10, 15,
	10, 15, 583, 15, 15, 15, 17, 588, 530, 590, 10, 592, 10, 572, 10, 15, 10, 15,
	10, 15, 10, 15, 603, 15, 605, 15, 167, 608, 578, 610, 10, 612, 10, 614, 2,
	15, 377, 15, 619, 10, 8, 622, 10, 624, 15, 626, 477, 15, 16, 547, 631, 19,
	602, 21, 22, 23, 24, 15, 375, 17, 452, 453, 18, 18, 24, 2, 15, 387, 36, 12,
	18, 361, 40, 41, 42, 15, 366, 578, 368, 47, 370, 49, 50, 51, 52, 53, 54, 55,
	56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 2, 529, 385, 292, 469, 148, 8, 411, 10, 109, 578,
	18, 18, 15, 16, 470, 15, 19, 18, 21, 22, 23, 469, 18, 18, 74, 18, 572, 24,
	27, 20, 18, 246, 12, 36, 82, 37, 18, 40, 41, 42, 221, 27, 3, 448, 47, 20, 49,
	50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68,
	69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 24, 82, 18, 18, 47, 15,
	15, 2, 12, 23, 15, 522, 24, 8, 15, 10, 18, 15, 353, 15, 0, 16, 485, 15, 19,
	24, 21, 22, 23, 24, 15, 15, 0, 0, 3, 0, 78, 78, 95, 375, 558, 36, 385, 385,
	477, 40, 41, 42, 212, 109, 86, 221, 47, 537, 49, 50, 51, 52, 53, 54, 55, 56,
	57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 2, 602, 221, 393, -1, -1, 8, -1, 10, -1, -1, -1, -1,
	15, 16, -1, -1, -1, -1, 21, 22, 23, 24, -1, 334, -1, -1, -1, 484, 296, -1,
	-1, -1, -1, 36, -1, -1, -1, 40, 41, 42, -1, -1, -1, -1, 47, -1, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70,
	71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, 431, -1, 8, -1,
	10, -1, -1, -1, -1, -1, 16, -1, -1, -1, -1, 21, 22, 23, 24, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, 36, -1, -1, -1, 40, 41, 42, -1, -1, -1, 46, 47,
	-1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
	67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, 1, -1, -1, -1,
	-1, 8, -1, 10, -1, 94, -1, 12, 15, 16, -1, -1, 17, -1, 21, 22, 23, 24, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, -1, -1, -1, 40, 41, 42, -1, -1,
	-1, -1, 47, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
	64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, -1,
	-1, -1, 2, -1, 85, 86, -1, -1, 8, -1, 10, -1, -1, 94, 95, 15, 16, -1, -1,
	184, -1, 21, 22, 23, 24, 106, 107, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36,
	-1, -1, -1, -1, 41, 42, -1, -1, -1, -1, 47, -1, 49, 50, 51, 52, 53, 54, 55,
	56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, -1, -1, -1, -1, -1, 168, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, 83, -1, -1, -1, 267, -1, -1, -1, -1, -1, -1, -1, -1, -1, 97,
	-1, -1, 100, -1, -1, -1, -1, -1, 286, 287, 108, -1, 206, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, 219, -1, 221, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 86, 242, 243, -1, -1, 246, -1, -1,
	-1, 154, -1, 156, -1, -1, -1, -1, -1, -1, -1, -1, -1, 107, -1, -1, 265, 266,
	-1, 172, -1, 174, 355, -1, 177, 178, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, 288, 193, 290, 195, -1, 197, -1, 199, 200, -1, 298, 299, -1, -1,
	-1, -1, -1, -1, -1, -1, 212, 393, -1, -1, -1, -1, 218, 219, 220, -1, 222, -1,
	224, -1, -1, 227, -1, -1, -1, -1, -1, -1, -1, -1, -1, 237, -1, -1, -1, -1,
	-1, 339, 340, -1, -1, -1, -1, 249, 430, 251, -1, 253, -1, -1, 256, -1, 258,
	355, -1, 261, -1, -1, -1, 206, -1, -1, -1, -1, -1, -1, -1, -1, 274, -1, -1,
	-1, 278, 375, 221, 281, 378, 283, -1, -1, -1, -1, -1, -1, -1, 387, -1, -1,
	-1, -1, -1, -1, 298, 299, -1, -1, -1, -1, -1, 246, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 425, -1,
	427, -1, 333, 430, 431, -1, -1, -1, 435, -1, -1, -1, -1, -1, -1, -1, 288, -1,
	290, -1, -1, -1, -1, -1, -1, 452, 453, -1, -1, -1, 361, -1, -1, -1, -1, 366,
	547, 368, -1, 370, -1, -1, 469, -1, -1, -1, -1, -1, 475, -1, -1, 478, -1, -1,
	-1, -1, -1, -1, -1, 486, -1, -1, -1, -1, -1, 576, -1, 339, 340, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, 411, -1, -1, 355, -1, -1, -1, -1, 599, -1,
	-1, -1, -1, -1, 425, 522, 427, -1, -1, -1, -1, -1, 529, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, 543, 448, -1, -1, -1, -1, -1, -1, -1, -1,
	553, -1, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1,
	-1, -1, 18, -1, 576, 21, 578, -1, 24, -1, 26, -1, -1, 430, 431, -1, -1, -1,
	34, -1, -1, -1, -1, -1, -1, 41, 42, 599, -1, -1, 602, -1, -1, 49, 50, 51, 52,
	53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10,
	-1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1,
	-1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1,
	49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
	68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1,
	-1, -1, -1, 10, -1, 12, -1, -1, 576, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1,
	26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, 599, -1, -1, 41, 42, -1, -1,
	-1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
	64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2,
	-1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21,
	-1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1,
	41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
	60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,
	79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1,
	18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1,
	-1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55,
	56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1,
	-1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1,
	-1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70,
	71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1,
	10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1,
	-1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1,
	-1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
	67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1,
	-1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24,
	-1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1,
	-1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
	63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1,
	21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1,
	-1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
	59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
	78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1,
	-1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1,
	-1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54,
	55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12,
	-1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1,
	-1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50,
	51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
	70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1,
	-1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1,
	-1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1,
	-1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1,
	-1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1,
	24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42,
	-1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
	81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1,
	-1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1,
	-1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1,
	-1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34,
	-1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53,
	54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72,
	73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1,
	12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1,
	-1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49,
	50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68,
	69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1,
	-1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26,
	-1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1,
	-1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1,
	-1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1,
	-1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41,
	42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
	61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
	80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18,
	-1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1,
	-1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56,
	57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1,
	-1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1,
	34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52,
	53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10,
	-1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1,
	-1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1,
	49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
	68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1,
	-1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1,
	26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1,
	-1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
	64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2,
	-1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21,
	-1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1,
	41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
	60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,
	79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1,
	18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1,
	-1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55,
	56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1,
	-1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1,
	-1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70,
	71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1,
	10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1,
	-1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1,
	-1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
	67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1,
	-1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24,
	-1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1,
	-1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
	63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1,
	21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1,
	-1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
	59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
	78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1,
	-1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1,
	-1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54,
	55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12,
	-1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1,
	-1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50,
	51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
	70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1,
	-1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1,
	-1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1,
	-1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1,
	-1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1,
	24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42,
	-1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
	81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1,
	-1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1,
	-1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 1, -1, 3, 4, 5, 6, 7, -1, -1, 10, 11, 12, 13, 14, 15, 16,
	17, 18, 19, 20, 21, 22, 23, 24, -1, -1, 27, 28, 29, 30, 31, 32, 33, 34, 35,
	36, 37, 38, 39, -1, -1, -1, 43, 44, 45, 46, 47, 48, -1, -1, -1, -1, -1, -1,
	-1, -1, 1, -1, 3, 4, 5, 6, 7, -1, -1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 81, 82, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, -1, -1, -1, 43, 44, 45, 46, 47, 48, 0, -1, 2, -1, -1, -1, -1, -1, 8, 9,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, 26, -1, -1,
	-1, -1, -1, 81, 82, -1, -1, -1, -1, -1, -1, 40, 41, 42, -1, -1, -1, -1, -1,
	-1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
	67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 0, -1, 2, -1, -1,
	-1, -1, -1, 8, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	25, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41, 42, -1,
	-1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
	63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	0, -1, 2, -1, -1, -1, -1, -1, 8, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, 25, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, 40, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 0, -1, 2, -1, -1, -1, -1, -1, 8, 9, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, 26, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, 40, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52,
	53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 0, -1, 2, -1, -1, -1, -1, -1, 8, 9,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, 26, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41, 42, -1, -1, -1, -1, -1,
	-1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
	67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 0, -1, 2, -1, -1,
	-1, -1, -1, 8, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	25, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41, 42, -1,
	-1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
	63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	0, -1, 2, -1, -1, -1, -1, -1, 8, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, 25, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, 40, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 0, -1, 2, -1, -1, -1, -1, -1, 8, 9, 83, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, 95, -1, 97, 25, 26, 100, -1, -1, -1, -1, -1, -1,
	-1, 108, -1, -1, -1, -1, 40, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52,
	53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81, -1, 156, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, 172, -1, 174, -1, -1, 177, 178, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 193, -1, 195, -1, 197, -1, 199,
	200, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 212, -1, -1, -1, -1, -1,
	218, -1, -1, -1, -1, -1, 224, -1, -1, 227, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, 2, 249, -1, 251, -1, 253, 8,
	9, 256, -1, 258, 83, -1, 261, -1, -1, -1, -1, -1, 267, -1, -1, -1, -1, 26,
	97, 274, -1, 100, -1, 278, -1, -1, 281, -1, 283, 108, -1, 40, 41, 42, -1, -1,
	-1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
	64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, -1, -1,
	-1, 154, -1, 156, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	172, -1, 174, -1, -1, 177, 178, -1, -1, -1, -1, -1, -1, 361, -1, -1, -1, -1,
	366, -1, 368, 193, 370, 195, -1, 197, -1, 199, 200, -1, 378, -1, -1, -1, -1,
	-1, -1, -1, -1, 387, 212, -1, -1, -1, -1, 393, 218, -1, 220, -1, 222, -1,
	224, -1, -1, 227, -1, -1, -1, -1, -1, -1, -1, 411, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, 249, -1, 251, -1, 253, -1, -1, 256, -1, 258, -1,
	-1, 261, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 448, -1, 274, -1, -1, -1,
	278, -1, -1, 281, 41, 283, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,
	55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, -1, -1, -1, 2, -1, -1, -1, -1, -1, 8, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, 26, -1, -1, -1, 529,
	-1, -1, -1, -1, -1, -1, -1, 361, -1, 40, 41, 42, 366, -1, 368, -1, 370, 547,
	49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
	68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, -1, -1, -1, -1, -1, -1,
	-1, 411, -1, -1, -1, -1, -1, -1, -1, 18, 19, -1, -1, -1, 23, -1, 602, 26, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1, -1,
	448, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 18, 19,
	-1, -1, -1, 23, -1, -1, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, 41, -1, -1, -1, -1, -1, 532, 533, 49, 50, 51, 52, 53, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 2, 568, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, 21, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, 36, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, 47, -1, 49, 50, 51, 52, 53,
	54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72,
	73, 74, 75, 76, 77, 78, 79, 80, 0, -1, -1, -1, -1, -1, -1, -1, -1, 9, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41, -1, -1, -1, 45, -1, -1, -1, 49,
	50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68,
	69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 2, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 21, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, 33, -1, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1,
	-1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 2, -1, -1, -1,
	-1, -1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, 42, 2, 3,
	-1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
	64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, -1, 41,
	-1, -1, 44, -1, -1, -1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
	61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
	80, 83, -1, -1, -1, 27, -1, 29, -1, -1, -1, 33, -1, -1, -1, 97, -1, -1, 100,
	41, -1, -1, -1, -1, -1, -1, 108, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
	60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,
	79, 80, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, -1, -1, -1, 154, -1, 156, -1,
	-1, -1, -1, -1, -1, -1, 97, -1, -1, 100, -1, -1, -1, -1, 172, -1, 174, 108,
	-1, 177, 178, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 193,
	-1, 195, -1, 197, -1, 199, 200, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	212, -1, -1, -1, -1, -1, 218, -1, 220, 154, 222, 156, 224, -1, -1, 227, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 172, -1, 174, -1, -1, 177, 178, -1,
	-1, -1, 249, -1, 251, -1, 253, -1, -1, 256, -1, 258, -1, 193, 261, 195, -1,
	197, -1, 199, 200, -1, -1, -1, -1, -1, -1, 274, -1, -1, -1, 278, 212, -1,
	281, -1, 283, -1, 218, 83, 220, -1, 222, -1, 224, -1, -1, 227, -1, -1, -1,
	-1, -1, 97, -1, -1, 100, -1, -1, -1, -1, -1, -1, -1, 108, -1, -1, -1, -1,
	249, -1, 251, -1, 253, -1, -1, 256, -1, 258, -1, -1, 261, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, 274, -1, -1, -1, 278, -1, -1, 281, -1, 283, -1,
	-1, -1, -1, -1, -1, 154, -1, 156, -1, 361, -1, -1, -1, -1, 366, -1, 368, -1,
	370, -1, -1, -1, -1, 172, -1, 174, -1, -1, 177, 178, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, 193, -1, 195, -1, 197, -1, 199, 200, -1, -1,
	-1, -1, -1, -1, -1, 411, -1, -1, -1, 212, -1, 83, -1, -1, -1, 218, -1, 220,
	-1, 222, -1, 224, 361, -1, 227, 97, -1, 366, 100, 368, -1, 370, -1, -1, -1,
	-1, 108, -1, -1, -1, -1, -1, 448, -1, -1, -1, 249, -1, 251, -1, 253, -1, -1,
	256, -1, 258, -1, -1, 261, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	274, 411, -1, -1, 278, -1, -1, 281, -1, 283, -1, 154, -1, 156, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 172, -1, 174, -1, -1, 177,
	178, -1, -1, 448, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 193, -1, 195,
	-1, 197, -1, 199, 200, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 212, -1,
	-1, -1, -1, -1, 218, -1, 220, -1, 222, -1, 224, -1, -1, 227, -1, -1, 361, -1,
	-1, -1, -1, 366, 0, 368, -1, 370, -1, -1, -1, -1, -1, 9, -1, -1, -1, 249, -1,
	251, -1, 253, -1, -1, 256, -1, 258, -1, -1, 261, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, 274, -1, 40, 41, 278, -1, 411, 281, -1, 283, -1, 49, 50,
	51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
	70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 448, -1, -1, -1, -1, -1, -1, 2,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 32, -1, -1, -1, -1, -1, -1, 361, -1,
	41, 42, -1, 366, 2, 368, -1, 370, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
	60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,
	79, 80, -1, 39, -1, 41, 42, -1, -1, -1, 411, -1, -1, 49, 50, 51, 52, 53, 54,
	55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 0, -1, 448, -1, -1, -1, -1, -1, 8, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41, -1, -1, -1, -1, -1, -1, -1, 49,
	50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68,
	69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 2, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 24, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1,
	-1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 2, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, 42, -1,
	-1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
	63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 0,
	-1, -1, -1, -1, -1, -1, -1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, 40, 41, -1, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76,
	77, 78, 79, 80, 0, 1, -1, 3, 4, 5, 6, 7, -1, 9, -1, 11, 12, 13, 14, -1, -1,
	17, 18, 19, 20, -1, -1, -1, -1, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
	-1, 37, 38, 39, -1, -1, -1, 43, 44, 45, -1, -1, 48, -1, -1, 17, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, 41, 2, -1, -1, -1, -1, -1, 82, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
	59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
	78, 79, 80, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56,
	57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 29, -1, -1, -1, 33, -1, -1, -1, -1, -1, -1, -1, 41, -1,
	-1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
	83, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 97, -1, -1, 100, -1,
	-1, -1, -1, -1, -1, -1, 108, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 97, -1, -1, 100, -1, -1, -1,
	-1, -1, -1, -1, 108, -1, -1, -1, -1, -1, -1, -1, -1, -1, 154, -1, 156, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 172, -1, 174, -1, -1,
	177, 178, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 154, -1, 156, 193, -1,
	195, -1, 197, -1, 199, 200, -1, -1, -1, -1, -1, -1, -1, 172, -1, 174, -1,
	212, 177, 178, -1, -1, -1, 218, -1, -1, -1, -1, -1, 224, -1, -1, 227, -1,
	193, -1, 195, -1, 197, -1, 199, 200, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, 212, 249, -1, 251, -1, 253, 218, 83, 256, -1, 258, -1, 224, 261, -1, 227,
	-1, -1, -1, -1, -1, 97, -1, -1, 100, -1, 274, -1, -1, -1, 278, -1, 108, 281,
	-1, 283, -1, 249, -1, 251, -1, 253, -1, -1, 256, -1, 258, -1, -1, 261, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 274, -1, -1, -1, 278, -1, -1,
	281, -1, 283, -1, -1, -1, -1, -1, -1, 154, -1, 156, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, 172, -1, 174, -1, -1, 177, 178, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, 361, -1, -1, -1, 193, 366, 195, 368, 197,
	370, 199, 200, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 212, -1, -1, -1,
	-1, -1, 218, -1, -1, -1, -1, -1, 224, 361, -1, 227, -1, -1, 366, -1, 368, -1,
	370, -1, -1, -1, -1, 411, -1, -1, -1, -1, -1, -1, -1, -1, -1, 249, -1, 251,
	-1, 253, -1, -1, 256, -1, 258, -1, -1, 261, -1, -1, -1, -1, 2, -1, -1, -1,
	-1, -1, -1, -1, 274, 411, 448, -1, 278, -1, -1, 281, -1, 283, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, -1,
	-1, -1, -1, -1, -1, 448, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, 32, -1, -1, -1, -1, -1, -1, 361, -1, 41,
	-1, -1, 366, -1, 368, -1, 370, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
	60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,
	79, 80, -1, -1, -1, -1, -1, -1, -1, -1, 411, 0, 1, -1, 3, 4, 5, 6, 7, -1, 9,
	-1, 11, 12, 13, 14, -1, -1, 17, 18, 19, 20, -1, -1, -1, -1, 25, 26, 27, 28,
	29, 30, -1, 32, 33, 34, 35, 448, 37, 38, 39, -1, -1, 8, 43, 44, 45, -1, -1,
	48, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1, -1, -1, 82, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70,
	71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 28, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, 41, -1, -1, -1, -1, -1, -1, 8, 49, 50, 51, 52, 53, 54, 55,
	56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 41, -1, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53,
	54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72,
	73, 74, 75, 76, 77, 78, 79, 80, 41, -1, -1, -1, -1, -1, -1, -1, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70,
	71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 41, -1, -1, -1, -1, -1, -1, -1, 49,
	50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68,
	69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 0, 1, -1, 3, 4, 5, 6, 7, -1,
	9, -1, 11, 12, 13, 14, -1, -1, 17, 18, 19, 20, -1, -1, -1, -1, 25, 26, 27,
	28, 29, 30, -1, 32, 33, 34, 35, 83, 37, 38, 39, -1, -1, -1, -1, 44, 45, -1,
	-1, 48, -1, 97, -1, -1, 100, -1, -1, -1, -1, -1, -1, -1, 108, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, 83, -1, -1, -1, -1, -1, -1, -1, -1, -1, 82, -1, -1,
	-1, 97, -1, -1, 100, -1, -1, -1, -1, -1, -1, -1, 108, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, 154, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, 172, -1, 174, -1, -1, 177, 178, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, 154, -1, -1, 193, -1, 195, -1, 197, -1, 199, 200, -1, -1, -1, -1, -1,
	-1, -1, 172, -1, 174, -1, -1, 177, 178, -1, -1, -1, 218, -1, -1, -1, -1, -1,
	224, -1, -1, -1, -1, 193, -1, 195, -1, 197, -1, 199, 200, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, 249, -1, 251, -1, 253, 218, 83, 256, -1, 258, -1,
	224, 261, -1, -1, -1, -1, -1, -1, -1, 97, -1, -1, 100, -1, 274, -1, -1, -1,
	278, -1, 108, 281, -1, 283, -1, 249, -1, 251, -1, 253, -1, 83, 256, -1, 258,
	-1, -1, 261, -1, -1, -1, -1, -1, -1, -1, 97, -1, -1, 100, -1, 274, -1, -1,
	-1, 278, -1, 108, 281, -1, 283, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 172, -1, 174, -1, -1,
	177, 178, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 361, -1, -1, -1, 193, 366,
	195, 368, 197, 370, 199, 200, -1, -1, -1, -1, -1, -1, -1, 172, -1, 174, -1,
	-1, 177, 178, -1, -1, -1, 218, -1, -1, -1, -1, -1, 224, 361, -1, -1, -1, 193,
	366, 195, 368, 197, 370, 199, 200, -1, -1, 411, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, 249, -1, 251, -1, 253, 218, -1, 256, -1, 258, -1, 224, 261, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 274, 411, 448, -1, 278, -1, -1, 281,
	-1, 283, -1, 249, -1, 251, -1, 253, -1, -1, 256, -1, 258, -1, -1, 261, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 274, -1, 448, -1, 278, -1, -1,
	281, -1, 283, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, 361, -1, -1, -1, -1, 366, -1, 368, -1, 370, 83, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 97, -1, -1, 100, -1, -1, -1,
	-1, -1, -1, -1, 108, 361, -1, -1, -1, -1, 366, -1, 368, -1, 370, -1, -1, -1,
	-1, 411, -1, -1, -1, -1, -1, -1, -1, 0, 1, -1, 3, 4, 5, 6, 7, -1, 9, -1, 11,
	12, 13, 14, -1, -1, 17, 18, -1, 20, -1, -1, -1, -1, 25, 26, 27, 411, 448, 30,
	-1, 32, 33, 34, 35, -1, 37, 38, 39, -1, 172, -1, 174, 44, 45, 177, 178, 48,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 193, -1, 195, 448, 197,
	-1, 199, 200, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 82, -1, -1, -1,
	-1, 218, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 249, -1, 251, -1, 253,
	-1, -1, 256, -1, 258, 0, 1, 261, 3, 4, 5, 6, 7, -1, 9, -1, 11, 12, 13, 14,
	274, -1, 17, 18, 278, 20, -1, 281, -1, 283, 25, 26, 27, -1, -1, 30, -1, 32,
	33, -1, 35, -1, 37, 38, 39, -1, -1, -1, -1, 44, 45, -1, -1, 48, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 82, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 361, -1, -1, -1, -1, 366, -1,
	368, -1, 370, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, 411, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, 448,
}

var tmRuleLen = []int8{
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 5, 5, 4, 5, 4, 4, 3, 2, 0, 2, 0, 6,
	3, 3, 7, 3, 4, 3, 3, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 3, 3,
	3, 1, 9, 8, 8, 7, 8, 7, 7, 6, 6, 5, 8, 7, 7, 6, 7, 6, 6, 5, 5, 4, 8, 7, 7, 6,
	7, 6, 6, 5, 5, 4, 7, 6, 6, 5, 6, 5, 5, 4, 4, 3, 3, 3, 1, 1, 5, 4, 4, 3, 1, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 8, 7, 7, 6, 7, 6, 6, 5, 7, 6, 6, 5, 6, 5, 5, 4,
	7, 6, 6, 5, 8, 7, 7, 6, 7, 6, 6, 5, 3, 1, 1, 1, 1, 7, 5, 6, 4, 4, 4, 4, 5, 5,
	6, 4, 4, 5, 3, 1, 3, 1, 2, 1, 1, 2, 1, 3, 3, 2, 2, 1, 2, 1, 1, 0, 1, 3, 5, 4,
	3, 2, 2, 1, 2, 1, 1, 1, 1, 2, 3, 1, 1, 1, 1, 2, 3, 1, 3, 1, 3, 2, 1, 2, 1, 3,
	3, 1, 2, 1, 3, 1, 4, 2, 1, 3, 5, 5, 2, 2, 4, 1, 4, 2, 1, 3, 2, 1, 3, 3, 3, 1,
	3, 1, 4, 2, 1, 3, 3, 1, 1, 0, 3, 1, 2, 2, 1, 1, 1, 1, 1, 2, 3, 3, 1, 3, 3, 1,
	4, 3, 3, 2, 1, 3, 1, 1, 0,
}

var tmRuleSymbol = []int32{
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 86, 87, 88, 88, 89, 89, 89,
	90, 91, 92, 93, 93, 93, 93, 93, 93, 93, 93, 94, 94, 95, 95, 96, 96, 97, 98,
	98, 99, 99, 100, 101, 102, 102, 103, 104, 104, 105, 105, 105, 105, 106, 106,
	106, 106, 106, 107, 108, 109, 109, 110, 110, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 112, 113, 114, 114, 115, 115, 115, 116, 116, 117, 118,
	119, 119, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 123, 124, 124, 124, 125, 126, 126, 126,
	126, 127, 127, 127, 127, 127, 127, 127, 127, 127, 128, 128, 129, 129, 130,
	130, 131, 131, 132, 132, 133, 133, 133, 133, 133, 133, 133, 133, 133, 134,
	135, 135, 135, 135, 136, 137, 137, 138, 138, 138, 138, 138, 138, 139, 139,
	139, 139, 139, 139, 139, 140, 140, 141, 142, 142, 143, 144, 144, 144, 145,
	145, 146, 146, 147, 147, 148, 149, 149, 149, 149, 149, 149, 149, 149, 150,
	151, 151, 151, 151, 152, 152, 152, 153, 153, 154, 155, 155, 155, 156, 157,
	158, 158, 159, 159, 160, 160, 160, 160, 161, 161, 162, 162, 163, 163, 163,
	163, 164, 164, 164, 165, 165, 165, 165, 165, 165, 166, 166, 167, 167,
}

var tmRuleType = [...]NodeType{
	Identifier,           // identifier : ID
	Identifier,           // identifier : 'brackets'
	Identifier,           // identifier : 'inline'
	Identifier,           // identifier : 'prec'
	Identifier,           // identifier : 'shift'
	Identifier,           // identifier : 'input'
	Identifier,           // identifier : 'left'
	Identifier,           // identifier : 'right'
	Identifier,           // identifier : 'nonassoc'
	Identifier,           // identifier : 'generate'
	Identifier,           // identifier : 'assert'
	Identifier,           // identifier : 'empty'
	Identifier,           // identifier : 'nonempty'
	Identifier,           // identifier : 'global'
	Identifier,           // identifier : 'explicit'
	Identifier,           // identifier : 'lookahead'
	Identifier,           // identifier : 'param'
	Identifier,           // identifier : 'flag'
	Identifier,           // identifier : 'no-eoi'
	Identifier,           // identifier : 's'
	Identifier,           // identifier : 'x'
	Identifier,           // identifier : 'expect'
	Identifier,           // identifier : 'expect-rr'
	Identifier,           // identifier : 'class'
	Identifier,           // identifier : 'interface'
	Identifier,           // identifier : 'space'
	Identifier,           // identifier : 'extend'
	Identifier,           // identifier : 'inject'
	Identifier,           // identifier : 'layout'
	Identifier,           // identifier : 'language'
	Identifier,           // identifier : 'lalr'
	Identifier,           // identifier : 'lexer'
	Identifier,           // identifier : 'parser'
	Identifier,           // identifier_Keywords : ID
	Identifier,           // identifier_Keywords : 'brackets'
	Identifier,           // identifier_Keywords : 'inline'
	Identifier,           // identifier_Keywords : 'prec'
	Identifier,           // identifier_Keywords : 'shift'
	Identifier,           // identifier_Keywords : 'input'
	Identifier,           // identifier_Keywords : 'left'
	Identifier,           // identifier_Keywords : 'right'
	Identifier,           // identifier_Keywords : 'nonassoc'
	Identifier,           // identifier_Keywords : 'generate'
	Identifier,           // identifier_Keywords : 'assert'
	Identifier,           // identifier_Keywords : 'empty'
	Identifier,           // identifier_Keywords : 'nonempty'
	Identifier,           // identifier_Keywords : 'global'
	Identifier,           // identifier_Keywords : 'explicit'
	Identifier,           // identifier_Keywords : 'lookahead'
	Identifier,           // identifier_Keywords : 'param'
	Identifier,           // identifier_Keywords : 'flag'
	Identifier,           // identifier_Keywords : 'no-eoi'
	Identifier,           // identifier_Keywords : 's'
	Identifier,           // identifier_Keywords : 'x'
	Identifier,           // identifier_Keywords : 'expect'
	Identifier,           // identifier_Keywords : 'expect-rr'
	Identifier,           // identifier_Keywords : 'class'
	Identifier,           // identifier_Keywords : 'interface'
	Identifier,           // identifier_Keywords : 'space'
	Identifier,           // identifier_Keywords : 'extend'
	Identifier,           // identifier_Keywords : 'inject'
	Identifier,           // identifier_Keywords : 'layout'
	Identifier,           // identifier_Keywords : 'language'
	Identifier,           // identifier_Keywords : 'lalr'
	Identifier,           // identifier_Keywords : 'lexer'
	Identifier,           // identifier_Keywords : 'parser'
	Identifier,           // identifier_Keywords : 'true'
	Identifier,           // identifier_Keywords : 'false'
	Identifier,           // identifier_Keywords : 'separator'
	Identifier,           // identifier_Keywords : 'as'
	Identifier,           // identifier_Keywords : 'import'
	Identifier,           // identifier_Keywords : 'set'
	Identifier,           // identifier_Str : ID
	Identifier,           // identifier_Str : quoted_id
	Identifier,           // identifier_Str : scon
	Identifier,           // identifier_Str : 'brackets'
	Identifier,           // identifier_Str : 'inline'
	Identifier,           // identifier_Str : 'prec'
	Identifier,           // identifier_Str : 'shift'
	Identifier,           // identifier_Str : 'input'
	Identifier,           // identifier_Str : 'left'
	Identifier,           // identifier_Str : 'right'
	Identifier,           // identifier_Str : 'nonassoc'
	Identifier,           // identifier_Str : 'generate'
	Identifier,           // identifier_Str : 'assert'
	Identifier,           // identifier_Str : 'empty'
	Identifier,           // identifier_Str : 'nonempty'
	Identifier,           // identifier_Str : 'global'
	Identifier,           // identifier_Str : 'explicit'
	Identifier,           // identifier_Str : 'lookahead'
	Identifier,           // identifier_Str : 'param'
	Identifier,           // identifier_Str : 'flag'
	Identifier,           // identifier_Str : 'no-eoi'
	Identifier,           // identifier_Str : 's'
	Identifier,           // identifier_Str : 'x'
	Identifier,           // identifier_Str : 'expect'
	Identifier,           // identifier_Str : 'expect-rr'
	Identifier,           // identifier_Str : 'class'
	Identifier,           // identifier_Str : 'interface'
	Identifier,           // identifier_Str : 'space'
	Identifier,           // identifier_Str : 'extend'
	Identifier,           // identifier_Str : 'inject'
	Identifier,           // identifier_Str : 'layout'
	Identifier,           // identifier_Str : 'language'
	Identifier,           // identifier_Str : 'lalr'
	Identifier,           // identifier_Str : 'lexer'
	Identifier,           // identifier_Str : 'parser'
	IntegerLiteral,       // integer_literal : icon
	StringLiteral,        // string_literal : scon
	BooleanLiteral,       // boolean_literal : 'true'
	BooleanLiteral,       // boolean_literal : 'false'
	0,                    // literal : string_literal
	0,                    // literal : integer_literal
	0,                    // literal : boolean_literal
	Pattern,              // pattern : regexp
	Command,              // command : code
	SyntaxProblem,        // syntax_problem : error
	0,                    // file : header import__optlist option_optlist syntax_problem lexer_section parser_section
	0,                    // file : header import__optlist option_optlist syntax_problem lexer_section
	0,                    // file : header import__optlist option_optlist syntax_problem parser_section
	0,                    // file : header import__optlist option_optlist syntax_problem
	0,                    // file : header import__optlist option_optlist lexer_section parser_section
	0,                    // file : header import__optlist option_optlist lexer_section
	0,                    // file : header import__optlist option_optlist parser_section
	0,                    // file : header import__optlist option_optlist
	0,                    // import__optlist : import__optlist import_
	0,                    // import__optlist :
	0,                    // option_optlist : option_optlist option
	0,                    // option_optlist :
	Header,               // header : 'language' identifier_Keywords '(' identifier_Keywords ')' ';'
	Header,               // header : 'language' identifier_Keywords ';'
	LexerSection,         // lexer_section : '::' .recoveryScope 'lexer' lexer_parts
	ParserSection,        // parser_section : '::' .recoveryScope 'parser' 'lalr' '(' integer_literal ')' grammar_parts
	ParserSection,        // parser_section : '::' .recoveryScope 'parser' grammar_parts
	Import,               // import_ : 'import' identifier string_literal ';'
	Import,               // import_ : 'import' string_literal ';'
	Option,               // option : identifier '=' expression
	Symref,               // symref : identifier_Str
	Symref,               // symref_Args : identifier_Str args
	Symref,               // symref_Args : identifier_Str
	RawType,              // rawType : code
	0,                    // lexer_parts : lexer_part
	0,                    // lexer_parts : lexer_parts lexer_part_OrSyntaxError
	0,                    // lexer_part : named_pattern
	0,                    // lexer_part : lexeme
	0,                    // lexer_part : lexer_directive
	0,                    // lexer_part : start_conditions_scope
	0,                    // lexer_part_OrSyntaxError : named_pattern
	0,                    // lexer_part_OrSyntaxError : lexeme
	0,                    // lexer_part_OrSyntaxError : lexer_directive
	0,                    // lexer_part_OrSyntaxError : start_conditions_scope
	0,                    // lexer_part_OrSyntaxError : syntax_problem
	NamedPattern,         // named_pattern : identifier '=' pattern
	StartConditionsScope, // start_conditions_scope : start_conditions '{' .recoveryScope lexer_parts '}'
	StartConditions,      // start_conditions : '<' '*' '>'
	StartConditions,      // start_conditions : '<' stateref_list_Comma_separated '>'
	0,                    // stateref_list_Comma_separated : stateref_list_Comma_separated ',' stateref
	0,                    // stateref_list_Comma_separated : stateref
	Lexeme,               // lexeme : start_conditions identifier_Str lexeme_id rawTypeopt ':' pattern integer_literal lexeme_attrs command
	Lexeme,               // lexeme : start_conditions identifier_Str lexeme_id rawTypeopt ':' pattern integer_literal lexeme_attrs
	Lexeme,               // lexeme : start_conditions identifier_Str lexeme_id rawTypeopt ':' pattern integer_literal command
	Lexeme,               // lexeme : start_conditions identifier_Str lexeme_id rawTypeopt ':' pattern integer_literal
	Lexeme,               // lexeme : start_conditions identifier_Str lexeme_id rawTypeopt ':' pattern lexeme_attrs command
	Lexeme,               // lexeme : start_conditions identifier_Str lexeme_id rawTypeopt ':' pattern lexeme_attrs
	Lexeme,               // lexeme : start_conditions identifier_Str lexeme_id rawTypeopt ':' pattern command
	Lexeme,               // lexeme : start_conditions identifier_Str lexeme_id rawTypeopt ':' pattern
	Lexeme,               // lexeme : start_conditions identifier_Str lexeme_id rawTypeopt ':' lexeme_attrs
	Lexeme,               // lexeme : start_conditions identifier_Str lexeme_id rawTypeopt ':'
	Lexeme,               // lexeme : start_conditions identifier_Str rawTypeopt ':' pattern integer_literal lexeme_attrs command
	Lexeme,               // lexeme : start_conditions identifier_Str rawTypeopt ':' pattern integer_literal lexeme_attrs
	Lexeme,               // lexeme : start_conditions identifier_Str rawTypeopt ':' pattern integer_literal command
	Lexeme,               // lexeme : start_conditions identifier_Str rawTypeopt ':' pattern integer_literal
	Lexeme,               // lexeme : start_conditions identifier_Str rawTypeopt ':' pattern lexeme_attrs command
	Lexeme,               // lexeme : start_conditions identifier_Str rawTypeopt ':' pattern lexeme_attrs
	Lexeme,               // lexeme : start_conditions identifier_Str rawTypeopt ':' pattern command
	Lexeme,               // lexeme : start_conditions identifier_Str rawTypeopt ':' pattern
	Lexeme,               // lexeme : start_conditions identifier_Str rawTypeopt ':' lexeme_attrs
	Lexeme,               // lexeme : start_conditions identifier_Str rawTypeopt ':'
	Lexeme,               // lexeme : identifier_Str lexeme_id rawTypeopt ':' pattern integer_literal lexeme_attrs command
	Lexeme,               // lexeme : identifier_Str lexeme_id rawTypeopt ':' pattern integer_literal lexeme_attrs
	Lexeme,               // lexeme : identifier_Str lexeme_id rawTypeopt ':' pattern integer_literal command
	Lexeme,               // lexeme : identifier_Str lexeme_id rawTypeopt ':' pattern integer_literal
	Lexeme,               // lexeme : identifier_Str lexeme_id rawTypeopt ':' pattern lexeme_attrs command
	Lexeme,               // lexeme : identifier_Str lexeme_id rawTypeopt ':' pattern lexeme_attrs
	Lexeme,               // lexeme : identifier_Str lexeme_id rawTypeopt ':' pattern command
	Lexeme,               // lexeme : identifier_Str lexeme_id rawTypeopt ':' pattern
	Lexeme,               // lexeme : identifier_Str lexeme_id rawTypeopt ':' lexeme_attrs
	Lexeme,               // lexeme : identifier_Str lexeme_id rawTypeopt ':'
	Lexeme,               // lexeme : identifier_Str rawTypeopt ':' pattern integer_literal lexeme_attrs command
	Lexeme,               // lexeme : identifier_Str rawTypeopt ':' pattern integer_literal lexeme_attrs
	Lexeme,               // lexeme : identifier_Str rawTypeopt ':' pattern integer_literal command
	Lexeme,               // lexeme : identifier_Str rawTypeopt ':' pattern integer_literal
	Lexeme,               // lexeme : identifier_Str rawTypeopt ':' pattern lexeme_attrs command
	Lexeme,               // lexeme : identifier_Str rawTypeopt ':' pattern lexeme_attrs
	Lexeme,               // lexeme : identifier_Str rawTypeopt ':' pattern command
	Lexeme,               // lexeme : identifier_Str rawTypeopt ':' pattern
	Lexeme,               // lexeme : identifier_Str rawTypeopt ':' lexeme_attrs
	Lexeme,               // lexeme : identifier_Str rawTypeopt ':'
	LexemeId,             // lexeme_id : '(' identifier_Keywords ')'
	LexemeAttrs,          // lexeme_attrs : '(' lexeme_attribute ')'
	LexemeAttribute,      // lexeme_attribute : 'class'
	LexemeAttribute,      // lexeme_attribute : 'space'
	DirectiveBrackets,    // lexer_directive : '%' 'brackets' symref symref ';'
	InclusiveStartConds,  // lexer_directive : '%' 's' lexer_state_list_Comma_separated ';'
	ExclusiveStartConds,  // lexer_directive : '%' 'x' lexer_state_list_Comma_separated ';'
	0,                    // lexer_state_list_Comma_separated : lexer_state_list_Comma_separated ',' lexer_state
	0,                    // lexer_state_list_Comma_separated : lexer_state
	Stateref,             // stateref : identifier
	LexerState,           // lexer_state : identifier
	0,                    // grammar_parts : grammar_part
	0,                    // grammar_parts : grammar_parts grammar_part_OrSyntaxError
	0,                    // grammar_part : nonterm
	0,                    // grammar_part : template_param
	0,                    // grammar_part : directive
	0,                    // grammar_part_OrSyntaxError : nonterm
	0,                    // grammar_part_OrSyntaxError : template_param
	0,                    // grammar_part_OrSyntaxError : directive
	0,                    // grammar_part_OrSyntaxError : syntax_problem
	Nonterm,              // nonterm : identifier nonterm_params nonterm_alias rawType reportClause ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_params nonterm_alias rawType ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_params nonterm_alias reportClause ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_params nonterm_alias ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_params rawType reportClause ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_params rawType ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_params reportClause ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_params ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_alias rawType reportClause ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_alias rawType ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_alias reportClause ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_alias ':' rules ';'
	Nonterm,              // nonterm : identifier rawType reportClause ':' rules ';'
	Nonterm,              // nonterm : identifier rawType ':' rules ';'
	Nonterm,              // nonterm : identifier reportClause ':' rules ';'
	Nonterm,              // nonterm : identifier ':' rules ';'
	Nonterm,              // nonterm : 'extend' identifier nonterm_alias reportClause ':' rules ';'
	Nonterm,              // nonterm : 'extend' identifier nonterm_alias ':' rules ';'
	Nonterm,              // nonterm : 'extend' identifier reportClause ':' rules ';'
	Nonterm,              // nonterm : 'extend' identifier ':' rules ';'
	Nonterm,              // nonterm : 'inline' identifier nonterm_params nonterm_alias reportClause ':' rules ';'
	Nonterm,              // nonterm : 'inline' identifier nonterm_params nonterm_alias ':' rules ';'
	Nonterm,              // nonterm : 'inline' identifier nonterm_params reportClause ':' rules ';'
	Nonterm,              // nonterm : 'inline' identifier nonterm_params ':' rules ';'
	Nonterm,              // nonterm : 'inline' identifier nonterm_alias reportClause ':' rules ';'
	Nonterm,              // nonterm : 'inline' identifier nonterm_alias ':' rules ';'
	Nonterm,              // nonterm : 'inline' identifier reportClause ':' rules ';'
	Nonterm,              // nonterm : 'inline' identifier ':' rules ';'
	NontermAlias,         // nonterm_alias : '[' identifier_Keywords ']'
	Assoc,                // assoc : 'left'
	Assoc,                // assoc : 'right'
	Assoc,                // assoc : 'nonassoc'
	ParamModifier,        // param_modifier : 'lookahead'
	TemplateParam,        // template_param : '%' param_modifier param_type identifier '=' param_value ';'
	TemplateParam,        // template_param : '%' param_modifier param_type identifier ';'
	TemplateParam,        // template_param : '%' param_type identifier '=' param_value ';'
	TemplateParam,        // template_param : '%' param_type identifier ';'
	DirectivePrio,        // directive : '%' assoc references ';'
	DirectiveInput,       // directive : '%' 'input' inputref_list_Comma_separated ';'
	DirectiveInterface,   // directive : '%' 'interface' identifier_list_Comma_separated ';'
	DirectiveAssert,      // directive : '%' 'assert' 'empty' rhsSet ';'
	DirectiveAssert,      // directive : '%' 'assert' 'nonempty' rhsSet ';'
	DirectiveSet,         // directive : '%' 'generate' identifier '=' rhsSet ';'
	DirectiveExpect,      // directive : '%' 'expect' integer_literal ';'
	DirectiveExpectRR,    // directive : '%' 'expect-rr' integer_literal ';'
	DirectiveInject,      // directive : '%' 'inject' symref reportClause ';'
	0,                    // identifier_list_Comma_separated : identifier_list_Comma_separated ',' identifier
	0,                    // identifier_list_Comma_separated : identifier
	0,                    // inputref_list_Comma_separated : inputref_list_Comma_separated ',' inputref
	0,                    // inputref_list_Comma_separated : inputref
	Inputref,             // inputref : symref 'no-eoi'
	Inputref,             // inputref : symref
	0,                    // references : symref
	0,                    // references : references symref
	0,                    // rules : rule0
	0,                    // rules : rules '|' rule0
	Rule,                 // rule0 : predicate rhsParts reportClause
	Rule,                 // rule0 : predicate rhsParts
	Rule,                 // rule0 : predicate reportClause
	Rule,                 // rule0 : predicate
	Rule,                 // rule0 : rhsParts reportClause
	Rule,                 // rule0 : rhsParts
	Rule,                 // rule0 : reportClause
	Rule,                 // rule0 :
	0,                    // rule0 : syntax_problem
	Predicate,            // predicate : '[' predicate_expression ']'
	ReportClause,         // reportClause : '->' identifier '/' identifier_list_Comma_separated reportAs
	ReportClause,         // reportClause : '->' identifier '/' identifier_list_Comma_separated
	ReportClause,         // reportClause : '->' identifier reportAs
	ReportClause,         // reportClause : '->' identifier
	ReportAs,             // reportAs : 'as' identifier
	0,                    // rhsParts : rhsPart
	0,                    // rhsParts : rhsParts rhsPart_OrSyntaxError
	0,                    // rhsPart : rhsAssignment
	0,                    // rhsPart : command
	0,                    // rhsPart : rhsStateMarker
	0,                    // rhsPart : rhsLookahead
	RhsEmpty,             // rhsPart : '%' 'empty'
	RhsPrec,              // rhsPart : '%' 'prec' symref
	0,                    // rhsPart_OrSyntaxError : rhsAssignment
	0,                    // rhsPart_OrSyntaxError : command
	0,                    // rhsPart_OrSyntaxError : rhsStateMarker
	0,                    // rhsPart_OrSyntaxError : rhsLookahead
	RhsEmpty,             // rhsPart_OrSyntaxError : '%' 'empty'
	RhsPrec,              // rhsPart_OrSyntaxError : '%' 'prec' symref
	0,                    // rhsPart_OrSyntaxError : syntax_problem
	0,                    // lookahead_predicate_list_And_separated : lookahead_predicate_list_And_separated '&' lookahead_predicate
	0,                    // lookahead_predicate_list_And_separated : lookahead_predicate
	RhsLookahead,         // rhsLookahead : '(?=' lookahead_predicate_list_And_separated ')'
	LookaheadPredicate,   // lookahead_predicate : '!' symref
	LookaheadPredicate,   // lookahead_predicate : symref
	StateMarker,          // rhsStateMarker : '.' identifier
	0,                    // rhsAssignment : rhsOptional
	RhsAssignment,        // rhsAssignment : identifier_Str '=' rhsOptional
	RhsPlusAssignment,    // rhsAssignment : identifier_Str '+=' rhsOptional
	0,                    // rhsOptional : rhsCast
	RhsOptional,          // rhsOptional : rhsCast '?'
	0,                    // rhsCast : rhsAlias
	RhsCast,              // rhsCast : rhsAlias 'as' symref_Args
	0,                    // rhsAlias : rhsPrimary
	RhsAlias,             // rhsAlias : rhsPrimary '[' identifier_Keywords ']'
	ListSeparator,        // listSeparator : 'separator' references
	RhsSymbol,            // rhsPrimary : symref_Args
	RhsNested,            // rhsPrimary : '(' .recoveryScope rules ')'
	RhsPlusList,          // rhsPrimary : '(' .recoveryScope rhsParts listSeparator ')' '+'
	RhsStarList,          // rhsPrimary : '(' .recoveryScope rhsParts listSeparator ')' '*'
	RhsPlusQuantifier,    // rhsPrimary : rhsPrimary '+'
	RhsStarQuantifier,    // rhsPrimary : rhsPrimary '*'
	RhsIgnored,           // rhsPrimary : '$' '(' .recoveryScope rules ')'
	0,                    // rhsPrimary : rhsSet
	RhsSet,               // rhsSet : 'set' '(' .recoveryScope setExpression ')'
	SetSymbol,            // setPrimary : identifier symref_Args
	SetSymbol,            // setPrimary : symref_Args
	SetCompound,          // setPrimary : '(' setExpression ')'
	SetComplement,        // setPrimary : '~' setPrimary
	0,                    // setExpression : setPrimary
	SetOr,                // setExpression : setExpression '|' setExpression
	SetAnd,               // setExpression : setExpression '&' setExpression
	0,                    // nonterm_param_list_Comma_separated : nonterm_param_list_Comma_separated ',' nonterm_param
	0,                    // nonterm_param_list_Comma_separated : nonterm_param
	NontermParams,        // nonterm_params : '<' nonterm_param_list_Comma_separated '>'
	0,                    // nonterm_param : param_ref
	InlineParameter,      // nonterm_param : identifier identifier '=' param_value
	InlineParameter,      // nonterm_param : identifier identifier
	ParamRef,             // param_ref : identifier
	SymrefArgs,           // args : '<' argument_list_Comma_separatedopt '>'
	0,                    // argument_list_Comma_separated : argument_list_Comma_separated ',' argument
	0,                    // argument_list_Comma_separated : argument
	0,                    // argument_list_Comma_separatedopt : argument_list_Comma_separated
	0,                    // argument_list_Comma_separatedopt :
	ArgumentVal,          // argument : param_ref ':' param_value
	ArgumentVal,          // argument : param_ref
	ArgumentTrue,         // argument : '+' param_ref
	ArgumentFalse,        // argument : '~' param_ref
	ParamType,            // param_type : 'flag'
	ParamType,            // param_type : 'param'
	0,                    // param_value : literal
	0,                    // param_value : param_ref
	0,                    // predicate_primary : param_ref
	PredicateNot,         // predicate_primary : '!' param_ref
	PredicateEq,          // predicate_primary : param_ref '==' literal
	PredicateNotEq,       // predicate_primary : param_ref '!=' literal
	0,                    // predicate_expression : predicate_primary
	PredicateAnd,         // predicate_expression : predicate_expression '&&' predicate_expression
	PredicateOr,          // predicate_expression : predicate_expression '||' predicate_expression
	0,                    // expression : literal
	Array,                // expression : '[' expression_list_Comma_separated ',' ']'
	Array,                // expression : '[' expression_list_Comma_separated ']'
	Array,                // expression : '[' ',' ']'
	Array,                // expression : '[' ']'
	0,                    // expression : syntax_problem
	0,                    // expression_list_Comma_separated : expression_list_Comma_separated ',' expression
	0,                    // expression_list_Comma_separated : expression
	0,                    // rawTypeopt : rawType
	0,                    // rawTypeopt :
}

// set(follow ERROR) = SCON, REM, COLONCOLON, OR, SEMICOLON, DOT, COMMA, RBRACK, LPAREN, LPARENQUESTASSIGN, MINUSGT, RPAREN, RBRACE, LT, DOLLAR, ERROR, ID, QUOTED_ID, SEPARATOR, SET, ASSERT, BRACKETS, CLASS, EMPTY, EXPECT, EXPECTMINUSRR, EXPLICIT, EXTEND, FLAG, GENERATE, GLOBAL, INJECT, INLINE, INPUT, INTERFACE, LALR, LANGUAGE, LAYOUT, LEFT, LEXER, LOOKAHEAD, NOMINUSEOI, NONASSOC, NONEMPTY, PARAM, PARSER, PREC, RIGHT, CHAR_S, SHIFT, SPACE, CHAR_X, CODE
var afterErr = []token.Type{
	2, 8, 9, 10, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 36, 40, 41, 42, 46, 47,
	49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
	68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
}
